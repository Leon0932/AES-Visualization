//
//  AESCipherTest.swift
//  AES-ArchitectureTests
//
//  Created by Leon Chamoun on 30.09.24.
//

import XCTest
@testable import AES_Visualization

final class AESCipherTest: XCTestCase {
    var cipher: AESCipher!
    
    override func setUpWithError() throws {
        cipher = AESCipher(keySchedule: AESKeySchedule(),
                           state: AESState())
        super.setUp()
    }
    
    override func tearDownWithError() throws {
        cipher = nil
        super.tearDown()
    }
    
    func testEncryption128() throws {
        let input: [Byte] = [0x32, 0x43, 0xf6, 0xa8, 0x88, 0x5a, 0x30, 0x8d, 0x31, 0x31, 0x98, 0xa2, 0xe0, 0x37, 0x07, 0x34]
        let key: [Byte] = [0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c]
        
        let expectedOutput: [[Byte]] = [
            [0x39, 0x02, 0xdc, 0x19],
            [0x25, 0xdc, 0x11, 0x6a],
            [0x84, 0x09, 0x85, 0x0b],
            [0x1d, 0xfb, 0x97, 0x32]
        ]
        let expectedCipherHistory: [CipherRound] = [
            CipherRound(
                index: 0,
                startOfRound: [
                    [0x32, 0x88, 0x31, 0xe0],
                    [0x43, 0x5a, 0x31, 0x37],
                    [0xf6, 0x30, 0x98, 0x07],
                    [0xa8, 0x8d, 0xa2, 0x34]
                ],
                afterAddRound: [
                    [0x19, 0xa0, 0x9a, 0xe9],
                    [0x3d, 0xf4, 0xc6, 0xf8],
                    [0xe3, 0xe2, 0x8d, 0x48],
                    [0xbe, 0x2b, 0x2a, 0x08]
                ],
                roundKey: [
                    [0x2b, 0x28, 0xab, 0x09],
                    [0x7e, 0xae, 0xf7, 0xcf],
                    [0x15, 0xd2, 0x15, 0x4f],
                    [0x16, 0xa6, 0x88, 0x3c]
                ]
            ),
            CipherRound(
                index: 1,
                startOfRound: [
                    [0x19, 0xa0, 0x9a, 0xe9],
                    [0x3d, 0xf4, 0xc6, 0xf8],
                    [0xe3, 0xe2, 0x8d, 0x48],
                    [0xbe, 0x2b, 0x2a, 0x08]
                ],
                afterAddRound: [
                    [0xa4, 0x68, 0x6b, 0x02],
                    [0x9c, 0x9f, 0x5b, 0x6a],
                    [0x7f, 0x35, 0xea, 0x50],
                    [0xf2, 0x2b, 0x43, 0x49]
                ],
                afterSubBytes: [
                    [0xd4, 0xe0, 0xb8, 0x1e],
                    [0x27, 0xbf, 0xb4, 0x41],
                    [0x11, 0x98, 0x5d, 0x52],
                    [0xae, 0xf1, 0xe5, 0x30]
                ],
                afterShiftRows: [
                    [0xd4, 0xe0, 0xb8, 0x1e],
                    [0xbf, 0xb4, 0x41, 0x27],
                    [0x5d, 0x52, 0x11, 0x98],
                    [0x30, 0xae, 0xf1, 0xe5]
                ],
                afterMixColumns: [
                    [0x04, 0xe0, 0x48, 0x28],
                    [0x66, 0xcb, 0xf8, 0x06],
                    [0x81, 0x19, 0xd3, 0x26],
                    [0xe5, 0x9a, 0x7a, 0x4c]
                ],
                roundKey: [
                    [0xa0, 0x88, 0x23, 0x2a],
                    [0xfa, 0x54, 0xa3, 0x6c],
                    [0xfe, 0x2c, 0x39, 0x76],
                    [0x17, 0xb1, 0x39, 0x05]
                ]
            ),
            CipherRound(
                index: 2,
                startOfRound: [
                    [0xa4, 0x68, 0x6b, 0x02],
                    [0x9c, 0x9f, 0x5b, 0x6a],
                    [0x7f, 0x35, 0xea, 0x50],
                    [0xf2, 0x2b, 0x43, 0x49]
                ],
                afterAddRound: [
                    [0xaa, 0x61, 0x82, 0x68],
                    [0x8f, 0xdd, 0xd2, 0x32],
                    [0x5f, 0xe3, 0x4a, 0x46],
                    [0x03, 0xef, 0xd2, 0x9a]
                ],
                afterSubBytes: [
                    [0x49, 0x45, 0x7f, 0x77],
                    [0xde, 0xdb, 0x39, 0x02],
                    [0xd2, 0x96, 0x87, 0x53],
                    [0x89, 0xf1, 0x1a, 0x3b]
                ],
                afterShiftRows: [
                    [0x49, 0x45, 0x7f, 0x77],
                    [0xdb, 0x39, 0x02, 0xde],
                    [0x87, 0x53, 0xd2, 0x96],
                    [0x3b, 0x89, 0xf1, 0x1a]
                ],
                afterMixColumns: [
                    [0x58, 0x1b, 0xdb, 0x1b],
                    [0x4d, 0x4b, 0xe7, 0x6b],
                    [0xca, 0x5a, 0xca, 0xb0],
                    [0xf1, 0xac, 0xa8, 0xe5]
                ],
                roundKey: [
                    [0xf2, 0x7a, 0x59, 0x73],
                    [0xc2, 0x96, 0x35, 0x59],
                    [0x95, 0xb9, 0x80, 0xf6],
                    [0xf2, 0x43, 0x7a, 0x7f]
                ]
            ),
            CipherRound(
                index: 3,
                startOfRound: [
                    [0xaa, 0x61, 0x82, 0x68],
                    [0x8f, 0xdd, 0xd2, 0x32],
                    [0x5f, 0xe3, 0x4a, 0x46],
                    [0x03, 0xef, 0xd2, 0x9a]
                ],
                afterAddRound: [
                    [0x48, 0x67, 0x4d, 0xd6],
                    [0x6c, 0x1d, 0xe3, 0x5f],
                    [0x4e, 0x9d, 0xb1, 0x58],
                    [0xee, 0x0d, 0x38, 0xe7]
                ],
                afterSubBytes: [
                    [0xac, 0xef, 0x13, 0x45],
                    [0x73, 0xc1, 0xb5, 0x23],
                    [0xcf, 0x11, 0xd6, 0x5a],
                    [0x7b, 0xdf, 0xb5, 0xb8]
                ],
                afterShiftRows: [
                    [0xac, 0xef, 0x13, 0x45],
                    [0xc1, 0xb5, 0x23, 0x73],
                    [0xd6, 0x5a, 0xcf, 0x11],
                    [0xb8, 0x7b, 0xdf, 0xb5]
                ],
                afterMixColumns : [
                    [0x75, 0x20, 0x53, 0xbb],
                    [0xec, 0x0b, 0xc0, 0x25],
                    [0x09, 0x63, 0xcf, 0xd0],
                    [0x93, 0x33, 0x7c, 0xdc]
                ],
                roundKey : [
                    [0x3d, 0x47, 0x1e, 0x6d],
                    [0x80, 0x16, 0x23, 0x7a],
                    [0x47, 0xfe, 0x7e, 0x88],
                    [0x7d, 0x3e, 0x44, 0x3b]
                ]
            ),
            CipherRound(
                index: 4,
                startOfRound: [
                    [0x48, 0x67, 0x4d, 0xd6],
                    [0x6c, 0x1d, 0xe3, 0x5f],
                    [0x4e, 0x9d, 0xb1, 0x58],
                    [0xee, 0x0d, 0x38, 0xe7]
                ],
                afterAddRound: [
                    [0xe0, 0xc8, 0xd9, 0x85],
                    [0x92, 0x63, 0xb1, 0xb8],
                    [0x7f, 0x63, 0x35, 0xbe],
                    [0xe8, 0xc0, 0x50, 0x01]
                ],
                afterSubBytes: [
                    [0x52, 0x85, 0xe3, 0xf6],
                    [0x50, 0xa4, 0x11, 0xcf],
                    [0x2f, 0x5e, 0xc8, 0x6a],
                    [0x28, 0xd7, 0x07, 0x94]
                ],
                afterShiftRows: [
                    [0x52, 0x85, 0xe3, 0xf6],
                    [0xa4, 0x11, 0xcf, 0x50],
                    [0xc8, 0x6a, 0x2f, 0x5e],
                    [0x94, 0x28, 0xd7, 0x07]
                ],
                afterMixColumns: [
                    [0x0f, 0x60, 0x6f, 0x5e],
                    [0xd6, 0x31, 0xc0, 0xb3],
                    [0xda, 0x38, 0x10, 0x13],
                    [0xa9, 0xbf, 0x6b, 0x01]
                ],
                roundKey: [
                    [0xef, 0xa8, 0xb6, 0xdb],
                    [0x44, 0x52, 0x71, 0x0b],
                    [0xa5, 0x5b, 0x25, 0xad],
                    [0x41, 0x7f, 0x3b, 0x00]
                ]
            ),
            CipherRound(
                index: 5,
                startOfRound: [
                    [0xe0, 0xc8, 0xd9, 0x85],
                    [0x92, 0x63, 0xb1, 0xb8],
                    [0x7f, 0x63, 0x35, 0xbe],
                    [0xe8, 0xc0, 0x50, 0x01]
                ],
                afterAddRound: [
                    [0xf1, 0xc1, 0x7c, 0x5d],
                    [0x00, 0x92, 0xc8, 0xb5],
                    [0x6f, 0x4c, 0x8b, 0xd5],
                    [0x55, 0xef, 0x32, 0x0c]
                ],
                afterSubBytes: [
                    [0xe1, 0xe8, 0x35, 0x97],
                    [0x4f, 0xfb, 0xc8, 0x6c],
                    [0xd2, 0xfb, 0x96, 0xae],
                    [0x9b, 0xba, 0x53, 0x7c]
                ],
                afterShiftRows: [
                    [0xe1, 0xe8, 0x35, 0x97],
                    [0xfb, 0xc8, 0x6c, 0x4f],
                    [0x96, 0xae, 0xd2, 0xfb],
                    [0x7c, 0x9b, 0xba, 0x53]
                ],
                afterMixColumns: [
                    [0x25, 0xbd, 0xb6, 0x4c],
                    [0xd1, 0x11, 0x3a, 0x4c],
                    [0xa9, 0xd1, 0x33, 0xc0],
                    [0xad, 0x68, 0x8e, 0xb0]
                ],
                roundKey: [
                    [0xd4, 0x7c, 0xca, 0x11],
                    [0xd1, 0x83, 0xf2, 0xf9],
                    [0xc6, 0x9d, 0xb8, 0x15],
                    [0xf8, 0x87, 0xbc, 0xbc]
                ]
            ),
            CipherRound(
                index: 6,
                startOfRound: [
                    [0xf1, 0xc1, 0x7c, 0x5d],
                    [0x00, 0x92, 0xc8, 0xb5],
                    [0x6f, 0x4c, 0x8b, 0xd5],
                    [0x55, 0xef, 0x32, 0x0c]
                ],
                afterAddRound: [
                    [0x26, 0x3d, 0xe8, 0xfd],
                    [0x0e, 0x41, 0x64, 0xd2],
                    [0x2e, 0xb7, 0x72, 0x8b],
                    [0x17, 0x7d, 0xa9, 0x25]
                ],
                afterSubBytes: [
                    [0xa1, 0x78, 0x10, 0x4c],
                    [0x63, 0x4f, 0xe8, 0xd5],
                    [0xa8, 0x29, 0x3d, 0x03],
                    [0xfc, 0xdf, 0x23, 0xfe]
                ],
                afterShiftRows: [
                    [0xa1, 0x78, 0x10, 0x4c],
                    [0x4f, 0xe8, 0xd5, 0x63],
                    [0x3d, 0x03, 0xa8, 0x29],
                    [0xfe, 0xfc, 0xdf, 0x23]
                ],
                afterMixColumns: [
                    [0x4b, 0x2c, 0x33, 0x37],
                    [0x86, 0x4a, 0x9d, 0xd2],
                    [0x8d, 0x89, 0xf4, 0x18],
                    [0x6d, 0x80, 0xe8, 0xd8]
                ],
                roundKey: [
                    [0x6d, 0x11, 0xdb, 0xca],
                    [0x88, 0x0b, 0xf9, 0x00],
                    [0xa3, 0x3e, 0x86, 0x93],
                    [0x7a, 0xfd, 0x41, 0xfd]
                ]
            ),
            CipherRound(
                index: 7,
                startOfRound: [
                    [0x26, 0x3d, 0xe8, 0xfd],
                    [0x0e, 0x41, 0x64, 0xd2],
                    [0x2e, 0xb7, 0x72, 0x8b],
                    [0x17, 0x7d, 0xa9, 0x25]
                ],
                afterAddRound: [
                    [0x5a, 0x19, 0xa3, 0x7a],
                    [0x41, 0x49, 0xe0, 0x8c],
                    [0x42, 0xdc, 0x19, 0x04],
                    [0xb1, 0x1f, 0x65, 0x0c]
                ],
                afterSubBytes: [
                    [0xf7, 0x27, 0x9b, 0x54],
                    [0xab, 0x83, 0x43, 0xb5],
                    [0x31, 0xa9, 0x40, 0x3d],
                    [0xf0, 0xff, 0xd3, 0x3f]
                ],
                afterShiftRows: [
                    [0xf7, 0x27, 0x9b, 0x54],
                    [0x83, 0x43, 0xb5, 0xab],
                    [0x40, 0x3d, 0x31, 0xa9],
                    [0x3f, 0xf0, 0xff, 0xd3]
                ],
                afterMixColumns: [
                    [0x14, 0x46, 0x27, 0x34],
                    [0x15, 0x16, 0x46, 0x2a],
                    [0xb5, 0x15, 0x56, 0xd8],
                    [0xbf, 0xec, 0xd7, 0x43]
                ],
                roundKey: [
                    [0x4e, 0x5f, 0x84, 0x4e],
                    [0x54, 0x5f, 0xa6, 0xa6],
                    [0xf7, 0xc9, 0x4f, 0xdc],
                    [0x0e, 0xf3, 0xb2, 0x4f]
                ]
            ),
            CipherRound(
                index: 8,
                startOfRound: [
                    [0x5a, 0x19, 0xa3, 0x7a],
                    [0x41, 0x49, 0xe0, 0x8c],
                    [0x42, 0xdc, 0x19, 0x04],
                    [0xb1, 0x1f, 0x65, 0x0c]
                ],
                afterAddRound: [
                    [0xea, 0x04, 0x65, 0x85],
                    [0x83, 0x45, 0x5d, 0x96],
                    [0x5c, 0x33, 0x98, 0xb0],
                    [0xf0, 0x2d, 0xad, 0xc5]
                ],
                afterSubBytes: [
                    [0xbe, 0xd4, 0x0a, 0xda],
                    [0x83, 0x3b, 0xe1, 0x64],
                    [0x2c, 0x86, 0xd4, 0xf2],
                    [0xc8, 0xc0, 0x4d, 0xfe]
                ],
                afterShiftRows: [
                    [0xbe, 0xd4, 0x0a, 0xda],
                    [0x3b, 0xe1, 0x64, 0x83],
                    [0xd4, 0xf2, 0x2c, 0x86],
                    [0xfe, 0xc8, 0xc0, 0x4d]
                ],
                afterMixColumns: [
                    [0x00, 0xb1, 0x54, 0xfa],
                    [0x51, 0xc8, 0x76, 0x1b],
                    [0x2f, 0x89, 0x6d, 0x99],
                    [0xd1, 0xff, 0xcd, 0xea]
                ],
                roundKey: [
                    [0xea, 0xb5, 0x31, 0x7f],
                    [0xd2, 0x8d, 0x2b, 0x8d],
                    [0x73, 0xba, 0xf5, 0x29],
                    [0x21, 0xd2, 0x60, 0x2f]
                ]
            ),
            CipherRound(
                index: 9,
                startOfRound: [
                    [0xea, 0x04, 0x65, 0x85],
                    [0x83, 0x45, 0x5d, 0x96],
                    [0x5c, 0x33, 0x98, 0xb0],
                    [0xf0, 0x2d, 0xad, 0xc5]
                ],
                afterAddRound: [
                    [0xeb, 0x59, 0x8b, 0x1b],
                    [0x40, 0x2e, 0xa1, 0xc3],
                    [0xf2, 0x38, 0x13, 0x42],
                    [0x1e, 0x84, 0xe7, 0xd2]
                ],
                afterSubBytes: [
                    [0x87, 0xf2, 0x4d, 0x97],
                    [0xec, 0x6e, 0x4c, 0x90],
                    [0x4a, 0xc3, 0x46, 0xe7],
                    [0x8c, 0xd8, 0x95, 0xa6]
                ],
                afterShiftRows: [
                    [0x87, 0xf2, 0x4d, 0x97],
                    [0x6e, 0x4c, 0x90, 0xec],
                    [0x46, 0xe7, 0x4a, 0xc3],
                    [0xa6, 0x8c, 0xd8, 0x95]
                ],
                afterMixColumns: [
                    [0x47, 0x40, 0xa3, 0x4c],
                    [0x37, 0xd4, 0x70, 0x9f],
                    [0x94, 0xe4, 0x3a, 0x42],
                    [0xed, 0xa5, 0xa6, 0xbc]
                ],
                roundKey: [
                    [0xac, 0x19, 0x28, 0x57],
                    [0x77, 0xfa, 0xd1, 0x5c],
                    [0x66, 0xdc, 0x29, 0x00],
                    [0xf3, 0x21, 0x41, 0x6e]
                ]
            ),
            CipherRound(
                index: 10,
                startOfRound: [
                    [0xeb, 0x59, 0x8b, 0x1b],
                    [0x40, 0x2e, 0xa1, 0xc3],
                    [0xf2, 0x38, 0x13, 0x42],
                    [0x1e, 0x84, 0xe7, 0xd2]
                ],
                afterAddRound: [
                    [0x39, 0x02, 0xdc, 0x19],
                    [0x25, 0xdc, 0x11, 0x6a],
                    [0x84, 0x09, 0x85, 0x0b],
                    [0x1d, 0xfb, 0x97, 0x32]
                ],
                afterSubBytes: [
                    [0xe9, 0xcb, 0x3d, 0xaf],
                    [0x09, 0x31, 0x32, 0x2e],
                    [0x89, 0x07, 0x7d, 0x2c],
                    [0x72, 0x5f, 0x94, 0xb5]
                ],
                afterShiftRows: [
                    [0xe9, 0xcb, 0x3d, 0xaf],
                    [0x31, 0x32, 0x2e, 0x09],
                    [0x7d, 0x2c, 0x89, 0x07],
                    [0xb5, 0x72, 0x5f, 0x94]
                ],
                roundKey: [
                    [0xd0, 0xc9, 0xe1, 0xb6],
                    [0x14, 0xee, 0x3f, 0x63],
                    [0xf9, 0x25, 0x0c, 0x0c],
                    [0xa8, 0x89, 0xc8, 0xa6]
                ]
            ),
            CipherRound(
                index: 11,
                startOfRound: [
                    [0x39, 0x02, 0xdc, 0x19],
                    [0x25, 0xdc, 0x11, 0x6a],
                    [0x84, 0x09, 0x85, 0x0b],
                    [0x1d, 0xfb, 0x97, 0x32]
                ]
            )
        ]

        cipher.set(input: input, key: key)
        cipher.encryptState()
        
        XCTAssertEqual(cipher.getResult(), expectedOutput)
        
        for (index, actualRound) in cipher.getCipherHistory.enumerated() {
            let expectedRound = expectedCipherHistory[index]
            
            XCTAssertEqual(actualRound.index,
                           expectedRound.index,
                           "Round \(index): Index does not match.")
            XCTAssertEqual(actualRound.afterAddRound,
                           expectedRound.afterAddRound,
                           "After AddRoundKey \(index): After AddRoundKey value does not match.")
            XCTAssertEqual(actualRound.afterShiftRows,
                           expectedRound.afterShiftRows,
                           "After ShiftRows \(index): After ShiftRows does not match.")
            XCTAssertEqual(actualRound.afterSubBytes,
                           expectedRound.afterSubBytes,
                           "After SubBytes \(index): After SubBytes does not match.")
            XCTAssertEqual(actualRound.afterMixColumns,
                           expectedRound.afterMixColumns,
                           "After MixColumns \(index): After MixColumns does not match.")
            XCTAssertEqual(actualRound.roundKey,
                           expectedRound.roundKey,
                           "Round Key \(index): Round Key does not match.")
            
        }
        
    }
    
    func testEncryption192() {
        let input: [Byte] = [0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff]
        let key: [Byte] = [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17]
        
        let expectedOutput: [[Byte]] = [
            [0xdd, 0x86, 0x6e, 0xec],
            [0xa9, 0x4c, 0xaf, 0x0d],
            [0x7c, 0xdf, 0x70, 0x71],
            [0xa4, 0xe0, 0xa0, 0x91]
        ]
        let expectedCipherHistory: [CipherRound] = [
            CipherRound(
                index: 0,
                startOfRound: [
                    [0x00, 0x44, 0x88, 0xcc],
                    [0x11, 0x55, 0x99, 0xdd],
                    [0x22, 0x66, 0xaa, 0xee],
                    [0x33, 0x77, 0xbb, 0xff],
                ],
                afterAddRound: [
                    [0x00, 0x40, 0x80, 0xc0],
                    [0x10, 0x50, 0x90, 0xd0],
                    [0x20, 0x60, 0xa0, 0xe0],
                    [0x30, 0x70, 0xb0, 0xf0]
                ],
                roundKey: [
                    [0x00, 0x04, 0x08, 0x0c],
                    [0x01, 0x05, 0x09, 0x0d],
                    [0x02, 0x06, 0x0a, 0x0e],
                    [0x03, 0x07, 0x0b, 0x0f],
                ]
            ),
            CipherRound(
                index: 1,
                startOfRound: [
                    [0x00, 0x40, 0x80, 0xc0],
                    [0x10, 0x50, 0x90, 0xd0],
                    [0x20, 0x60, 0xa0, 0xe0],
                    [0x30, 0x70, 0xb0, 0xf0],
                ],
                afterAddRound: [
                    [0x4f, 0x43, 0xaf, 0x41],
                    [0x63, 0xe0, 0xf8, 0xfa],
                    [0x76, 0xaa, 0xc9, 0x0d],
                    [0x06, 0x85, 0xd0, 0xe4]
                ],
                afterSubBytes: [
                    [0x63, 0x09, 0xcd, 0xba],
                    [0xca, 0x53, 0x60, 0x70],
                    [0xb7, 0xd0, 0xe0, 0xe1],
                    [0x04, 0x51, 0xe7, 0x8c]
                ],
                afterShiftRows: [
                    [0x63, 0x09, 0xcd, 0xba],
                    [0x53, 0x60, 0x70, 0xca],
                    [0xe0, 0xe1, 0xb7, 0xd0],
                    [0x8c, 0x04, 0x51, 0xe7]
                ],
                afterMixColumns: [
                    [0x5f, 0x57, 0xf7, 0x1d],
                    [0x72, 0xf5, 0xbe, 0xb9],
                    [0x64, 0xbc, 0x3b, 0xf9],
                    [0x15, 0x92, 0x29, 0x1a]
                ],
                roundKey: [
                    [0x10, 0x14, 0x58, 0x5c],
                    [0x11, 0x15, 0x46, 0x43],
                    [0x12, 0x16, 0xf2, 0xf4],
                    [0x13, 0x17, 0xf9, 0xfe]
                ]
            ),
            CipherRound(
                index: 2,
                startOfRound: [
                    [0x4f, 0x43, 0xaf, 0x41],
                    [0x63, 0xe0, 0xf8, 0xfa],
                    [0x76, 0xaa, 0xc9, 0x0d],
                    [0x06, 0x85, 0xd0, 0xe4]
                ],
                afterAddRound: [
                    [0xcb, 0x17, 0x62, 0x8b],
                    [0x02, 0xd2, 0xaa, 0xb2],
                    [0x81, 0xaf, 0x64, 0x5f],
                    [0x8c, 0x9c, 0x42, 0xd7]
                ],
                afterSubBytes: [
                    [0x84, 0x1a, 0x79, 0x83],
                    [0xfb, 0xe1, 0x41, 0x2d],
                    [0x38, 0xac, 0xdd, 0xd7],
                    [0x6f, 0x97, 0x70, 0x69]
                ],
                afterShiftRows: [
                    [0x84, 0x1a, 0x79, 0x83],
                    [0xe1, 0x41, 0x2d, 0xfb],
                    [0xdd, 0xd7, 0x38, 0xac],
                    [0x69, 0x6f, 0x97, 0x70]
                ],
                afterMixColumns: [
                    [0x9f, 0x4f, 0x2a, 0xd7],
                    [0x48, 0x95, 0xfc, 0xf1],
                    [0x7f, 0x5f, 0x86, 0xab],
                    [0x79, 0x66, 0xab, 0x29]
                ],
                roundKey: [
                    [0x54, 0x58, 0x48, 0x5c],
                    [0x4a, 0x47, 0x56, 0x43],
                    [0xfe, 0xf0, 0xe2, 0xf4],
                    [0xf5, 0xfa, 0xe9, 0xfe]
                ]
            ),
            CipherRound(
                index: 3,
                startOfRound: [
                    [0xcb, 0x17, 0x62, 0x8b],
                    [0x02, 0xd2, 0xaa, 0xb2],
                    [0x81, 0xaf, 0x64, 0x5f],
                    [0x8c, 0x9c, 0x42, 0xd7]
                ],
                afterAddRound: [
                    [0xf7, 0xa3, 0x8c, 0xa6],
                    [0x5c, 0x27, 0xfe, 0xc3],
                    [0x77, 0xc8, 0xbf, 0x7f],
                    [0x78, 0xed, 0xc1, 0x53]
                ],
                afterSubBytes: [
                    [0x1f, 0xf0, 0xaa, 0x3d],
                    [0x77, 0xb5, 0xac, 0x37],
                    [0x0c, 0x79, 0x43, 0xcf],
                    [0x64, 0xde, 0x2c, 0x0e]
                ],
                afterShiftRows: [
                    [0x1f, 0xf0, 0xaa, 0x3d],
                    [0xb5, 0xac, 0x37, 0x77],
                    [0x43, 0xcf, 0x0c, 0x79],
                    [0x0e, 0x64, 0xde, 0x2c]
                ],
                afterMixColumns: [
                    [0xb7, 0xbf, 0xc4, 0xb6],
                    [0xa5, 0x9d, 0x0e, 0x74],
                    [0x3e, 0x75, 0xfc, 0xcc],
                    [0xcb, 0xa0, 0x79, 0x11]
                ],
                roundKey: [
                    [0x40, 0x1c, 0x48, 0x10],
                    [0xf9, 0xba, 0xf0, 0xb7],
                    [0x49, 0xbd, 0x43, 0xb3],
                    [0xb3, 0x4d, 0xb8, 0x42]
                ]
            ),
            CipherRound(
                index: 4,
                startOfRound: [
                    [0xf7, 0xa3, 0x8c, 0xa6],
                    [0x5c, 0x27, 0xfe, 0xc3],
                    [0x77, 0xc8, 0xbf, 0x7f],
                    [0x78, 0xed, 0xc1, 0x53]
                ],
                afterAddRound: [
                    [0x22, 0xa8, 0x64, 0x64],
                    [0xff, 0x14, 0x96, 0xae],
                    [0xc9, 0x74, 0xf1, 0x25],
                    [0x16, 0x41, 0x9c, 0x32]
                ],
                
                afterSubBytes: [
                    [0x68, 0x0a, 0x64, 0x24],
                    [0x4a, 0xcc, 0xbb, 0x2e],
                    [0xf5, 0xe8, 0x08, 0xd2],
                    [0xbc, 0x55, 0x78, 0xed]
                ],
                afterShiftRows: [
                    [0x68, 0x0a, 0x64, 0x24],
                    [0xcc, 0xbb, 0x2e, 0x4a],
                    [0x08, 0xd2, 0xf5, 0xe8],
                    [0xed, 0xbc, 0x55, 0x78]
                ],
                afterMixColumns: [
                    [0x7a, 0xac, 0x1a, 0x06],
                    [0x1e, 0xb6, 0x69, 0xeb],
                    [0x98, 0xd1, 0x44, 0x2d],
                    [0xbd, 0x14, 0xdd, 0x3e]
                ],
                roundKey: [
                    [0x58, 0x04, 0x7e, 0x62],
                    [0xe1, 0xa2, 0xff, 0x45],
                    [0x51, 0xa5, 0xb5, 0x08],
                    [0xab, 0x55, 0x41, 0x0c]
                ]
            ),
            CipherRound(
                index: 5,
                startOfRound: [
                    [0x22, 0xa8, 0x64, 0x64],
                    [0xff, 0x14, 0x96, 0xae],
                    [0xc9, 0x74, 0xf1, 0x25],
                    [0x16, 0x41, 0x9c, 0x32]
                ],
                afterAddRound: [
                    [0x80, 0x76, 0x8d, 0x96],
                    [0x12, 0xfd, 0x8c, 0x5d],
                    [0x1e, 0x1d, 0x31, 0x1f],
                    [0x07, 0x8a, 0xbc, 0xee]
                ],
                afterSubBytes: [
                    [0x93, 0xc2, 0x43, 0x43],
                    [0x16, 0xfa, 0x90, 0xe4],
                    [0xdd, 0x92, 0xa1, 0x3f],
                    [0x47, 0x83, 0xde, 0x23]
                ],
                afterShiftRows: [
                    [0x93, 0xc2, 0x43, 0x43],
                    [0xfa, 0x90, 0xe4, 0x16],
                    [0xa1, 0x3f, 0xdd, 0x92],
                    [0x23, 0x47, 0x83, 0xde]
                ],
                afterMixColumns: [
                    [0xaa, 0x4c, 0xef, 0xf0],
                    [0xa7, 0xff, 0x6f, 0x1c],
                    [0x55, 0xe5, 0x98, 0x13],
                    [0xb3, 0x7c, 0xe1, 0xe6]
                ],
                roundKey: [
                    [0x2a, 0x3a, 0x62, 0x66],
                    [0xb5, 0x02, 0xe3, 0x41],
                    [0x4b, 0xf8, 0xa9, 0x0c],
                    [0xb4, 0xf6, 0x5d, 0x08]
                ]
            ),
            CipherRound(
                index: 6,
                startOfRound: [
                    [0x80, 0x76, 0x8d, 0x96],
                    [0x12, 0xfd, 0x8c, 0x5d],
                    [0x1e, 0x1d, 0x31, 0x1f],
                    [0x07, 0x8a, 0xbc, 0xee]
                ],
                afterAddRound: [
                    [0x67, 0x4e, 0xdf, 0x3d],
                    [0x1e, 0x2a, 0xdc, 0x78],
                    [0xf1, 0x1e, 0xb1, 0x9b],
                    [0xfd, 0x03, 0xef, 0x30]
                    
                ],
                afterSubBytes: [
                    [0xcd, 0x38, 0x5d, 0x90],
                    [0xc9, 0x54, 0x64, 0x4c],
                    [0x72, 0xa4, 0xc7, 0xc0],
                    [0xc5, 0x7e, 0x65, 0x28]
                ],
                afterShiftRows: [
                    [0xcd, 0x38, 0x5d, 0x90],
                    [0x54, 0x64, 0x4c, 0xc9],
                    [0xc7, 0xc0, 0x72, 0xa4],
                    [0x28, 0xc5, 0x7e, 0x65]
                ],
                afterMixColumns: [
                    [0x92, 0xd9, 0x62, 0xba],
                    [0x1f, 0x6e, 0x2d, 0x8b],
                    [0x74, 0x93, 0x77, 0xa5],
                    [0x8f, 0x7d, 0x25, 0x0c]
                ],
                roundKey: [
                    [0xf5, 0x97, 0xbd, 0x87],
                    [0x01, 0x44, 0xf1, 0xf3],
                    [0x85, 0x8d, 0xc6, 0x3e],
                    [0x72, 0x7e, 0xca, 0x3c]
                ]
            ),
            CipherRound(
                index: 7,
                startOfRound: [
                    [0x67, 0x4e, 0xdf, 0x3d],
                    [0x1e, 0x2a, 0xdc, 0x78],
                    [0xf1, 0x1e, 0xb1, 0x9b],
                    [0xfd, 0x03, 0xef, 0x30]
                ],
                afterAddRound: [
                    [0x0c, 0x0c, 0x16, 0xd6],
                    [0x03, 0x01, 0x6b, 0xdb],
                    [0x70, 0xe6, 0x8a, 0x3a],
                    [0xd0, 0x22, 0xcc, 0x2c]
                ],
                afterSubBytes: [
                    [0x85, 0x2f, 0x9e, 0x27],
                    [0x72, 0xe5, 0x86, 0xbc],
                    [0xa1, 0x72, 0xc8, 0x14],
                    [0x54, 0x7b, 0xdf, 0x04]
                ],
                afterShiftRows: [
                    [0x85, 0x2f, 0x9e, 0x27],
                    [0xe5, 0x86, 0xbc, 0x72],
                    [0xc8, 0x14, 0xa1, 0x72],
                    [0x04, 0x54, 0x7b, 0xdf]
                ],
                afterMixColumns: [
                    [0xe9, 0x8f, 0x22, 0x75],
                    [0x13, 0x50, 0x7e, 0x8a],
                    [0xe7, 0x7d, 0xf6, 0xcb],
                    [0xb1, 0x4b, 0x52, 0xcc]
                ],
                roundKey: [
                    [0xe5, 0x83, 0x34, 0xa3],
                    [0x10, 0x51, 0x15, 0x51],
                    [0x97, 0x9b, 0x7c, 0xf1],
                    [0x61, 0x69, 0x9e, 0xe0]
                ]
            ),
            CipherRound(
                index: 8,
                startOfRound: [
                    [0x0c, 0x0c, 0x16, 0xd6],
                    [0x03, 0x01, 0x6b, 0xdb],
                    [0x70, 0xe6, 0x8a, 0x3a],
                    [0xd0, 0x22, 0xcc, 0x2c]
                ],
                afterAddRound: [
                    [0x72, 0x0f, 0xe0, 0x40],
                    [0x55, 0xb8, 0x0d, 0xd0],
                    [0xda, 0x03, 0x6c, 0x52],
                    [0xd3, 0x10, 0x6b, 0x7c]
                ],
                afterSubBytes: [
                    [0xfe, 0xfe, 0x47, 0xf6],
                    [0x7b, 0x7c, 0x7f, 0xb9],
                    [0x51, 0x8e, 0x7e, 0x80],
                    [0x70, 0x93, 0x4b, 0x71]
                ],
                afterShiftRows: [
                    [0xfe, 0xfe, 0x47, 0xf6],
                    [0x7c, 0x7f, 0xb9, 0x7b],
                    [0x7e, 0x80, 0x51, 0x8e],
                    [0x71, 0x70, 0x93, 0x4b]
                ],
                afterMixColumns: [
                    [0x6c, 0x96, 0x9c, 0xbf],
                    [0xf5, 0xeb, 0x4e, 0xc2],
                    [0xed, 0x0a, 0xf2, 0x57],
                    [0xf9, 0x06, 0x1c, 0x62]
                ],
                roundKey: [
                    [0x1e, 0x99, 0x7c, 0xff],
                    [0xa0, 0x53, 0x43, 0x12],
                    [0x37, 0x09, 0x9e, 0x05],
                    [0x2a, 0x16, 0x77, 0x1e]
                ]
            ),
            CipherRound(
                index: 9,
                startOfRound: [
                    [0x72, 0x0f, 0xe0, 0x40],
                    [0x55, 0xb8, 0x0d, 0xd0],
                    [0xda, 0x03, 0x6c, 0x52],
                    [0xd3, 0x10, 0x6b, 0x7c]
                ],
                afterAddRound: [
                    [0xa9, 0x96, 0xb4, 0xf0],
                    [0x06, 0x8a, 0xbd, 0xc4],
                    [0xb2, 0xf4, 0xb2, 0x43],
                    [0x54, 0xe9, 0xd2, 0x36]
                ],
                afterSubBytes: [
                    [0x40, 0x76, 0xe1, 0x09],
                    [0xfc, 0x6c, 0xd7, 0x70],
                    [0x57, 0x7b, 0x50, 0x00],
                    [0x66, 0xca, 0x7f, 0x10]
                ],
                afterShiftRows: [
                    [0x40, 0x76, 0xe1, 0x09],
                    [0x6c, 0xd7, 0x70, 0xfc],
                    [0x50, 0x00, 0x57, 0x7b],
                    [0x10, 0x66, 0xca, 0x7f]
                ],
                afterMixColumns: [
                    [0x74, 0xe8, 0xd4, 0x09],
                    [0x78, 0xa5, 0x32, 0x18],
                    [0xbc, 0x0b, 0x7a, 0x82],
                    [0xdc, 0x81, 0x90, 0x62]
                ],
                roundKey: [
                    [0xdd, 0x7e, 0x60, 0xf9],
                    [0x7e, 0x2f, 0x8f, 0xdc],
                    [0x0e, 0xff, 0xc8, 0xc1],
                    [0x88, 0x68, 0x42, 0x54],
                ]
            ),
            CipherRound(
                index: 10,
                startOfRound: [
                    [0xa9, 0x96, 0xb4, 0xf0],
                    [0x06, 0x8a, 0xbd, 0xc4],
                    [0xb2, 0xf4, 0xb2, 0x43],
                    [0x54, 0xe9, 0xd2, 0x36]
                ],
                afterAddRound: [
                    [0x88, 0xf5, 0xcc, 0x06],
                    [0xec, 0xe7, 0x32, 0xd2],
                    [0x93, 0xe4, 0xf4, 0x94],
                    [0x0e, 0xb6, 0xc9, 0x14]
                ],
                afterSubBytes: [
                    [0xd3, 0x90, 0x8d, 0x8c],
                    [0x6f, 0x7e, 0x7a, 0x1c],
                    [0x37, 0xbf, 0x37, 0x1a],
                    [0x20, 0x1e, 0xb5, 0x05]
                ],
                afterShiftRows: [
                    [0xd3, 0x90, 0x8d, 0x8c],
                    [0x7e, 0x7a, 0x1c, 0x6f],
                    [0x37, 0x1a, 0x37, 0xbf],
                    [0x05, 0x20, 0x1e, 0xb5]
                ],
                afterMixColumns: [
                    [0x0d, 0x8f, 0x0c, 0xb8],
                    [0x73, 0x6a, 0xf2, 0x3d],
                    [0xcc, 0xbe, 0xdd, 0x42],
                    [0x2d, 0x8b, 0x9b, 0x2e]
                ],
                roundKey: [
                    [0x85, 0x7a, 0xc0, 0xbe],
                    [0x9f, 0x8d, 0xc0, 0xef],
                    [0x5f, 0x5a, 0x29, 0xd6],
                    [0x23, 0x3d, 0x52, 0x3a]
                ]
            ),
            CipherRound(
                index: 11,
                startOfRound: [
                    [0x88, 0xf5, 0xcc, 0x06],
                    [0xec, 0xe7, 0x32, 0xd2],
                    [0x93, 0xe4, 0xf4, 0x94],
                    [0x0e, 0xb6, 0xc9, 0x14]
                ],
                afterAddRound: [
                    [0xaf, 0x1c, 0x62, 0xfb],
                    [0xb7, 0xd1, 0x28, 0x20],
                    [0x3e, 0xb8, 0x0f, 0xd5],
                    [0xeb, 0x51, 0x27, 0x85]
                ],
                afterSubBytes: [
                    [0xc4, 0xe6, 0x4b, 0x6f],
                    [0xce, 0x94, 0x23, 0xb5],
                    [0xdc, 0x69, 0xbf, 0x22],
                    [0xab, 0x4e, 0xdd, 0xfa]
                ],
                afterShiftRows: [
                    [0xc4, 0xe6, 0x4b, 0x6f],
                    [0x94, 0x23, 0xb5, 0xce],
                    [0xbf, 0x22, 0xdc, 0x69],
                    [0xfa, 0xab, 0x4e, 0xdd]
                ],
                afterMixColumns: [
                    [0x71, 0x3b, 0xc0, 0x23],
                    [0xd7, 0x6d, 0x0b, 0x8e],
                    [0x20, 0x67, 0x8f, 0x0f],
                    [0x93, 0x7d, 0x28, 0xb7]
                ],
                roundKey: [
                    [0xde, 0x27, 0xa2, 0xd8],
                    [0x60, 0xbc, 0x23, 0xae],
                    [0x1e, 0xdf, 0x80, 0xda],
                    [0x78, 0x2c, 0x0f, 0x32]
                ]
            ),
            CipherRound(
                index: 12,
                startOfRound: [
                    [0xaf, 0x1c, 0x62, 0xfb],
                    [0xb7, 0xd1, 0x28, 0x20],
                    [0x3e, 0xb8, 0x0f, 0xd5],
                    [0xeb, 0x51, 0x27, 0x85]
                ],
                afterAddRound: [
                    [0xdd, 0x86, 0x6e, 0xec],
                    [0xa9, 0x4c, 0xaf, 0x0d],
                    [0x7c, 0xdf, 0x70, 0x71],
                    [0xa4, 0xe0, 0xa0, 0x91]
                    
                ],
                afterSubBytes: [
                    [0x79, 0x9c, 0xaa, 0x0f],
                    [0xa9, 0x3e, 0x34, 0xb7],
                    [0xb2, 0x6c, 0x76, 0x03],
                    [0xe9, 0xd1, 0xcc, 0x97]
                ],
                afterShiftRows: [
                    [0x79, 0x9c, 0xaa, 0x0f],
                    [0x3e, 0x34, 0xb7, 0xa9],
                    [0x76, 0x03, 0xb2, 0x6c],
                    [0x97, 0xe9, 0xd1, 0xcc]
                ],
                roundKey: [
                    [0xa4, 0x1a, 0xc4, 0xe3],
                    [0x97, 0x78, 0x18, 0xa4],
                    [0x0a, 0xdc, 0xc2, 0x1d],
                    [0x33, 0x09, 0x71, 0x5d]
                ]
            ),
            CipherRound(
                index: 13,
                startOfRound: [
                    [0xdd, 0x86, 0x6e, 0xec],
                    [0xa9, 0x4c, 0xaf, 0x0d],
                    [0x7c, 0xdf, 0x70, 0x71],
                    [0xa4, 0xe0, 0xa0, 0x91]
                ]
            )
        ]
        
        cipher.set(input: input, key: key)
        cipher.encryptState()
        
        XCTAssertEqual(cipher.getResult(), expectedOutput)
        
        for (index, actualRound) in cipher.getCipherHistory.enumerated() {
            let expectedRound = expectedCipherHistory[index]
            
            XCTAssertEqual(actualRound.index,
                           expectedRound.index,
                           "Round \(index): Index does not match.")
            XCTAssertEqual(actualRound.afterAddRound,
                           expectedRound.afterAddRound,
                           "After AddRoundKey \(index): After AddRoundKey value does not match.")
            XCTAssertEqual(actualRound.afterShiftRows,
                           expectedRound.afterShiftRows,
                           "After ShiftRows \(index): After ShiftRows does not match.")
            XCTAssertEqual(actualRound.afterSubBytes,
                           expectedRound.afterSubBytes,
                           "After SubBytes \(index): After SubBytes does not match.")
            XCTAssertEqual(actualRound.afterMixColumns,
                           expectedRound.afterMixColumns,
                           "After MixColumns \(index): After MixColumns does not match.")
            XCTAssertEqual(actualRound.roundKey,
                           expectedRound.roundKey,
                           "Round Key \(index): Round Key does not match.")
            
        }
    }
    
    func testEncryption256() {
        let input: [Byte] = [0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff]
        let key: [Byte] = [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f]
        
        let expectedOutput: [[Byte]] = [
            [0x8e, 0x51, 0xea, 0x4b],
            [0xa2, 0x67, 0xfc, 0x49],
            [0xb7, 0x45, 0x49, 0x60],
            [0xca, 0xbf, 0x90, 0x89],
        ]
        let expectedCipherHistory: [CipherRound] = [
            CipherRound(
                index: 0,
                startOfRound: [
                    [0x00, 0x44, 0x88, 0xcc],
                    [0x11, 0x55, 0x99, 0xdd],
                    [0x22, 0x66, 0xaa, 0xee],
                    [0x33, 0x77, 0xbb, 0xff],
                ],
                afterAddRound: [
                    [0x00, 0x40, 0x80, 0xc0],
                    [0x10, 0x50, 0x90, 0xd0],
                    [0x20, 0x60, 0xa0, 0xe0],
                    [0x30, 0x70, 0xb0, 0xf0],
                ],
                roundKey: [
                    [0x00, 0x04, 0x08, 0x0c],
                    [0x01, 0x05, 0x09, 0x0d],
                    [0x02, 0x06, 0x0a, 0x0e],
                    [0x03, 0x07, 0x0b, 0x0f],
                ]
            ),
            CipherRound(
                index: 1,
                startOfRound: [
                    [0x00, 0x40, 0x80, 0xc0],
                    [0x10, 0x50, 0x90, 0xd0],
                    [0x20, 0x60, 0xa0, 0xe0],
                    [0x30, 0x70, 0xb0, 0xf0],
                ],
                afterAddRound: [
                    [0x4f, 0x43, 0xef, 0x01],
                    [0x63, 0xe0, 0xa7, 0xa4],
                    [0x76, 0xaa, 0x21, 0xe7],
                    [0x06, 0x85, 0x32, 0x05],
                ],
                afterSubBytes: [
                    [0x63, 0x09, 0xcd, 0xba],
                    [0xca, 0x53, 0x60, 0x70],
                    [0xb7, 0xd0, 0xe0, 0xe1],
                    [0x04, 0x51, 0xe7, 0x8c],
                ],
                afterShiftRows: [
                    [0x63, 0x09, 0xcd, 0xba],
                    [0x53, 0x60, 0x70, 0xca],
                    [0xe0, 0xe1, 0xb7, 0xd0],
                    [0x8c, 0x04, 0x51, 0xe7],
                ],
                afterMixColumns: [
                    [0x5f, 0x57, 0xf7, 0x1d],
                    [0x72, 0xf5, 0xbe, 0xb9],
                    [0x64, 0xbc, 0x3b, 0xf9],
                    [0x15, 0x92, 0x29, 0x1a],
                ],
                roundKey: [
                    [0x10, 0x14, 0x18, 0x1c],
                    [0x11, 0x15, 0x19, 0x1d],
                    [0x12, 0x16, 0x1a, 0x1e],
                    [0x13, 0x17, 0x1b, 0x1f],
                ]
            ),
            CipherRound(
                index: 2,
                startOfRound: [
                    [0x4f, 0x43, 0xef, 0x01],
                    [0x63, 0xe0, 0xa7, 0xa4],
                    [0x76, 0xaa, 0x21, 0xe7],
                    [0x06, 0x85, 0x32, 0x05],
                ],
                afterAddRound: [
                    [0x18, 0x8a, 0x78, 0xc4],
                    [0x59, 0x1c, 0xed, 0x2f],
                    [0xfb, 0x00, 0x8a, 0x61],
                    [0xc2, 0xa0, 0xad, 0x09],
                ],
                afterSubBytes: [
                    [0x84, 0x1a, 0xdf, 0x7c],
                    [0xfb, 0xe1, 0x5c, 0x49],
                    [0x38, 0xac, 0xfd, 0x94],
                    [0x6f, 0x97, 0x23, 0x6b],
                ],
                afterShiftRows: [
                    [0x84, 0x1a, 0xdf, 0x7c],
                    [0xe1, 0x5c, 0x49, 0xfb],
                    [0xfd, 0x94, 0x38, 0xac],
                    [0x6b, 0x6f, 0x97, 0x23],
                ],
                afterMixColumns: [
                    [0xbd, 0x2b, 0xd1, 0x61],
                    [0x2a, 0x6a, 0x92, 0x5d],
                    [0x39, 0xc4, 0x44, 0xa1],
                    [0x5d, 0x38, 0x3e, 0x95],
                ],
                roundKey: [
                    [0xa5, 0xa1, 0xa9, 0xa5],
                    [0x73, 0x76, 0x7f, 0x72],
                    [0xc2, 0xc4, 0xce, 0xc0],
                    [0x9f, 0x98, 0x93, 0x9c],
                ]
            ),
            CipherRound(
                index: 3,
                startOfRound: [
                    [0x18, 0x8a, 0x78, 0xc4],
                    [0x59, 0x1c, 0xed, 0x2f],
                    [0xfb, 0x00, 0x8a, 0x61],
                    [0xc2, 0xa0, 0xad, 0x09],
                ],
                afterAddRound: [
                    [0x97, 0xcb, 0xa9, 0x8e],
                    [0x5c, 0x9f, 0x3a, 0xe1],
                    [0x66, 0x3f, 0x28, 0x0f],
                    [0xc1, 0xa8, 0xdf, 0x63],
                ],
                afterSubBytes: [
                    [0xad, 0x7e, 0xbc, 0x1c],
                    [0xcb, 0x9c, 0x55, 0x15],
                    [0x0f, 0x63, 0x7e, 0xef],
                    [0x25, 0xe0, 0x95, 0x01],
                ],
                afterShiftRows: [
                    [0xad, 0x7e, 0xbc, 0x1c],
                    [0x9c, 0x55, 0x15, 0xcb],
                    [0x7e, 0xef, 0x0f, 0x63],
                    [0x01, 0x25, 0xe0, 0x95],
                ],
                afterMixColumns: [
                    [0x81, 0xc9, 0xb3, 0x88],
                    [0x0d, 0xdb, 0x67, 0xa1],
                    [0xce, 0x81, 0x8c, 0xb5],
                    [0x0c, 0x72, 0x1e, 0xbd],
                ],
                roundKey: [
                    [0x16, 0x02, 0x1a, 0x06],
                    [0x51, 0x44, 0x5d, 0x40],
                    [0xa8, 0xbe, 0xa4, 0xba],
                    [0xcd, 0xda, 0xc1, 0xde],
                ]
            ),
            CipherRound(
                index: 4,
                startOfRound: [
                    [0x97, 0xcb, 0xa9, 0x8e],
                    [0x5c, 0x9f, 0x3a, 0xe1],
                    [0x66, 0x3f, 0x28, 0x0f],
                    [0xc1, 0xa8, 0xdf, 0x63],
                ],
                afterAddRound: [
                    [0x1c, 0xa4, 0xf9, 0x04],
                    [0x05, 0x17, 0x21, 0x70],
                    [0xf2, 0xe0, 0xc5, 0x15],
                    [0x71, 0x4f, 0xc1, 0x54],
                ],
                afterSubBytes: [
                    [0x88, 0x1f, 0xd3, 0x19],
                    [0x4a, 0xdb, 0x80, 0xf8],
                    [0x33, 0x75, 0x34, 0x76],
                    [0x78, 0xc2, 0x9e, 0xfb],
                ],
                afterShiftRows: [
                    [0x88, 0x1f, 0xd3, 0x19],
                    [0xdb, 0x80, 0xf8, 0x4a],
                    [0x34, 0x76, 0x33, 0x75],
                    [0xfb, 0x78, 0xc2, 0x9e],
                ],
                afterMixColumns: [
                    [0xb2, 0xab, 0x5f, 0x07],
                    [0x82, 0xe6, 0xaf, 0x8c],
                    [0x2d, 0xfb, 0x10, 0x00],
                    [0x81, 0x27, 0x3a, 0x33],
                ],
                roundKey: [
                    [0xae, 0x0f, 0xa6, 0x03],
                    [0x87, 0xf1, 0x8e, 0xfc],
                    [0xdf, 0x1b, 0xd5, 0x15],
                    [0xf0, 0x68, 0xfb, 0x67],
                ]
            ),
            CipherRound(
                index: 5,
                startOfRound: [
                    [0x1c, 0xa4, 0xf9, 0x04],
                    [0x05, 0x17, 0x21, 0x70],
                    [0xf2, 0xe0, 0xc5, 0x15],
                    [0x71, 0x4f, 0xc1, 0x54],
                ],
                afterAddRound: [
                    [0xc3, 0x1b, 0xa2, 0xa8],
                    [0x57, 0x45, 0xc7, 0xdc],
                    [0xaa, 0xb7, 0xbd, 0x99],
                    [0xe1, 0xb0, 0x28, 0xfa],
                ],
                afterSubBytes: [
                    [0x9c, 0x49, 0x99, 0xf2],
                    [0x6b, 0xf0, 0xfd, 0x51],
                    [0x89, 0xe1, 0xa6, 0x59],
                    [0xa3, 0x84, 0x78, 0x20],
                ],
                afterShiftRows: [
                    [0x9c, 0x49, 0x99, 0xf2],
                    [0xf0, 0xfd, 0x51, 0x6b],
                    [0xa6, 0x59, 0x89, 0xe1],
                    [0x20, 0xa3, 0x84, 0x78],
                ],
                afterMixColumns: [
                    [0xae, 0x74, 0xd7, 0xdb],
                    [0xb6, 0xe0, 0x3f, 0x64],
                    [0x5b, 0xf8, 0x56, 0xc8],
                    [0xa9, 0x22, 0x7b, 0x77],
                ],
                roundKey: [
                    [0x6d, 0x6f, 0x75, 0x73],
                    [0xe1, 0xa5, 0xf8, 0xb8],
                    [0xf1, 0x4f, 0xeb, 0x51],
                    [0x48, 0x92, 0x53, 0x8d],
                ]
            ),
            CipherRound(
                index: 6,
                startOfRound: [
                    [0xc3, 0x1b, 0xa2, 0xa8],
                    [0x57, 0x45, 0xc7, 0xdc],
                    [0xaa, 0xb7, 0xbd, 0x99],
                    [0xe1, 0xb0, 0x28, 0xfa],
                ],
                afterAddRound: [
                    [0x7f, 0xcb, 0xc1, 0x83],
                    [0x07, 0x4e, 0x0c, 0x75],
                    [0x41, 0x24, 0x81, 0xd5],
                    [0x43, 0x3e, 0x5d, 0x4c],
                ],
                afterSubBytes: [
                    [0x2e, 0xaf, 0x3a, 0xc2],
                    [0x5b, 0x6e, 0xc6, 0x86],
                    [0xac, 0xa9, 0x7a, 0xee],
                    [0xf8, 0xe7, 0x34, 0x2d],
                ],
                afterShiftRows: [
                    [0x2e, 0xaf, 0x3a, 0xc2],
                    [0x6e, 0xc6, 0x86, 0x5b],
                    [0x7a, 0xee, 0xac, 0xa9],
                    [0x2d, 0xf8, 0xe7, 0x34],
                ],
                afterMixColumns: [
                    [0xb9, 0x02, 0xae, 0xef],
                    [0x51, 0xe9, 0x25, 0xa0],
                    [0xc3, 0xbd, 0xcd, 0x8c],
                    [0x3c, 0x29, 0xb1, 0xc7],
                ],
                roundKey: [
                    [0xc6, 0xc9, 0x6f, 0x6c],
                    [0x56, 0xa7, 0x29, 0xd5],
                    [0x82, 0x99, 0x4c, 0x59],
                    [0x7f, 0x17, 0xec, 0x8b],
                ]
            ),
            CipherRound(
                index: 7,
                startOfRound: [
                    [0x7f, 0xcb, 0xc1, 0x83],
                    [0x07, 0x4e, 0x0c, 0x75],
                    [0x41, 0x24, 0x81, 0xd5],
                    [0x43, 0x3e, 0x5d, 0x4c],
                ],
                afterAddRound: [
                    [0xd6, 0x6c, 0x5a, 0xb9],
                    [0x53, 0xa0, 0xca, 0x6c],
                    [0xa4, 0xbc, 0xab, 0x5e],
                    [0x69, 0x0f, 0x5d, 0x7d],
                ],
                afterSubBytes: [
                    [0xd2, 0x1f, 0x78, 0xec],
                    [0xc5, 0x2f, 0xfe, 0x9d],
                    [0x83, 0x36, 0x0c, 0x03],
                    [0x1a, 0xb2, 0x4c, 0x29],
                ],
                afterShiftRows: [
                    [0xd2, 0x1f, 0x78, 0xec],
                    [0x2f, 0xfe, 0x9d, 0xc5],
                    [0x0c, 0x03, 0x83, 0x36],
                    [0x29, 0x1a, 0xb2, 0x4c],
                ],
                afterMixColumns: [
                    [0xeb, 0x3e, 0x7d, 0xed],
                    [0xb1, 0xe7, 0x75, 0x6b],
                    [0x9e, 0xc9, 0x35, 0x91],
                    [0x1c, 0xe8, 0xe9, 0x44],
                ],
                roundKey: [
                    [0x3d, 0x52, 0x27, 0x54],
                    [0xe2, 0x47, 0xbf, 0x07],
                    [0x3a, 0x75, 0x9e, 0xcf],
                    [0x75, 0xe7, 0xb4, 0x39],
                ]
            ),
            CipherRound(
                index: 8,
                startOfRound: [
                    [0xd6, 0x6c, 0x5a, 0xb9],
                    [0x53, 0xa0, 0xca, 0x6c],
                    [0xa4, 0xbc, 0xab, 0x5e],
                    [0x69, 0x0f, 0x5d, 0x7d],
                ],
                afterAddRound: [
                    [0x5a, 0x5f, 0x05, 0x68],
                    [0xa8, 0xd2, 0xe1, 0xf3],
                    [0x58, 0x8d, 0xa3, 0xb9],
                    [0x39, 0x7d, 0x88, 0xc5],
                ],
                afterSubBytes: [
                    [0xf6, 0x50, 0xbe, 0x56],
                    [0xed, 0xe0, 0x74, 0x50],
                    [0x49, 0x65, 0x62, 0x58],
                    [0xf9, 0x76, 0x4c, 0xff],
                ],
                afterShiftRows: [
                    [0xf6, 0x50, 0xbe, 0x56],
                    [0xe0, 0x74, 0x50, 0xed],
                    [0x62, 0x58, 0x49, 0x65],
                    [0xff, 0xf9, 0x76, 0x4c],
                ],
                afterMixColumns: [
                    [0x51, 0x9d, 0xa8, 0xa9],
                    [0x74, 0xa9, 0xb3, 0x74],
                    [0xc8, 0x84, 0xe6, 0xa5],
                    [0x66, 0x35, 0x2c, 0xea],
                ],
                roundKey: [
                    [0x0b, 0xc2, 0xad, 0xc1],
                    [0xdc, 0x7b, 0x52, 0x87],
                    [0x90, 0x09, 0x45, 0x1c],
                    [0x5f, 0x48, 0xa4, 0x2f],
                ]
            ),
            CipherRound(
                index: 9,
                startOfRound: [
                    [0x5a, 0x5f, 0x05, 0x68],
                    [0xa8, 0xd2, 0xe1, 0xf3],
                    [0x58, 0x8d, 0xa3, 0xb9],
                    [0x39, 0x7d, 0x88, 0xc5],
                ],
                afterAddRound: [
                    [0x4a, 0xc5, 0x64, 0x2a],
                    [0x82, 0x7e, 0x3d, 0xf3],
                    [0x48, 0x7e, 0xe5, 0xe8],
                    [0x51, 0x47, 0x0c, 0xc9],
                ],
                afterSubBytes: [
                    [0xbe, 0xcf, 0x6b, 0x45],
                    [0xc2, 0xb5, 0xf8, 0x0d],
                    [0x6a, 0x5d, 0x0a, 0x56],
                    [0x12, 0xff, 0xc4, 0xa6],
                ],
                afterShiftRows: [
                    [0xbe, 0xcf, 0x6b, 0x45],
                    [0xb5, 0xf8, 0x0d, 0xc2],
                    [0x0a, 0x56, 0x6a, 0x5d],
                    [0xa6, 0x12, 0xff, 0xc4],
                ],
                afterMixColumns: [
                    [0x0f, 0xd2, 0x54, 0x4e],
                    [0x77, 0xcc, 0x30, 0xf9],
                    [0xee, 0xad, 0xa8, 0x6a],
                    [0x31, 0xc0, 0x3f, 0xc3],
                ],
                roundKey: [
                    [0x45, 0x17, 0x30, 0x64],
                    [0xf5, 0xb2, 0x0d, 0x0a],
                    [0xa6, 0xd3, 0x4d, 0x82],
                    [0x60, 0x87, 0x33, 0x0a],
                ]
            ),
            CipherRound(
                index: 10,
                startOfRound: [
                    [0x4a, 0xc5, 0x64, 0x2a],
                    [0x82, 0x7e, 0x3d, 0xf3],
                    [0x48, 0x7e, 0xe5, 0xe8],
                    [0x51, 0x47, 0x0c, 0xc9],
                ],
                afterAddRound: [
                    [0xc1, 0xca, 0x70, 0x3b],
                    [0x49, 0x3b, 0xe9, 0x52],
                    [0x07, 0x3a, 0xaa, 0xb5],
                    [0xf6, 0xa0, 0x31, 0xec],
                ],
                afterSubBytes: [
                    [0xd6, 0xa6, 0x43, 0xe5],
                    [0x13, 0xf3, 0x27, 0x0d],
                    [0x52, 0xf3, 0xd9, 0x9b],
                    [0xd1, 0xa0, 0xfe, 0xdd],
                ],
                afterShiftRows: [
                    [0xd6, 0xa6, 0x43, 0xe5],
                    [0xf3, 0x27, 0x0d, 0x13],
                    [0xd9, 0x9b, 0x52, 0xf3],
                    [0xdd, 0xd1, 0xa0, 0xfe],
                ],
                afterMixColumns: [
                    [0xbd, 0x74, 0x63, 0xe9],
                    [0x86, 0x8f, 0x0f, 0x33],
                    [0xf0, 0xc4, 0x11, 0x12],
                    [0xea, 0xf4, 0xc1, 0x33],
                ],
                roundKey: [
                    [0x7c, 0xbe, 0x13, 0xd2],
                    [0xcf, 0xb4, 0xe6, 0x61],
                    [0xf7, 0xfe, 0xbb, 0xa7],
                    [0x1c, 0x54, 0xf0, 0xdf],
                ]
            ),
            CipherRound(
                index: 11,
                startOfRound: [
                    [0xc1, 0xca, 0x70, 0x3b],
                    [0x49, 0x3b, 0xe9, 0x52],
                    [0x07, 0x3a, 0xaa, 0xb5],
                    [0xf6, 0xa0, 0x31, 0xec],
                ],
                afterAddRound: [
                    [0x5f, 0xba, 0x50, 0x66],
                    [0x9c, 0xc6, 0x40, 0x67],
                    [0x6a, 0x34, 0x9f, 0x76],
                    [0xbf, 0xaa, 0xa7, 0x53],
                ],
                afterSubBytes: [
                    [0x78, 0x74, 0x51, 0xe2],
                    [0x3b, 0xe2, 0x1e, 0x00],
                    [0xc5, 0x80, 0xac, 0xd5],
                    [0x42, 0xe0, 0xc7, 0xce],
                ],
                afterShiftRows: [
                    [0x78, 0x74, 0x51, 0xe2],
                    [0xe2, 0x1e, 0x00, 0x3b],
                    [0xac, 0xd5, 0xc5, 0x80],
                    [0xce, 0x42, 0xe0, 0xc7],
                ],
                afterMixColumns: [
                    [0xaf, 0x5d, 0x87, 0xd5],
                    [0x86, 0x6e, 0xe5, 0xc8],
                    [0x90, 0x1d, 0xfb, 0x90],
                    [0x41, 0xd3, 0xed, 0x13],
                ],
                roundKey: [
                    [0xf0, 0xe7, 0xd7, 0xb3],
                    [0x1a, 0xa8, 0xa5, 0xaf],
                    [0xfa, 0x29, 0x64, 0xe6],
                    [0xfe, 0x79, 0x4a, 0x40],
                ]
            ),
            CipherRound(
                index: 12,
                startOfRound: [
                    [0x5f, 0xba, 0x50, 0x66],
                    [0x9c, 0xc6, 0x40, 0x67],
                    [0x6a, 0x34, 0x9f, 0x76],
                    [0xbf, 0xaa, 0xa7, 0x53],
                ],
                afterAddRound: [
                    [0x51, 0x43, 0x14, 0x01],
                    [0x66, 0x53, 0xfb, 0x92],
                    [0x04, 0x95, 0x86, 0x25],
                    [0x95, 0x03, 0xe4, 0x21],
                ],
                afterSubBytes: [
                    [0xcf, 0xf4, 0x53, 0x33],
                    [0xde, 0xb4, 0x09, 0x85],
                    [0x02, 0x18, 0xdb, 0x38],
                    [0x08, 0xac, 0x5c, 0xed],
                ],
                afterShiftRows: [
                    [0xcf, 0xf4, 0x53, 0x33],
                    [0xb4, 0x09, 0x85, 0xde],
                    [0xdb, 0x38, 0x02, 0x18],
                    [0xed, 0x08, 0xac, 0x5c],
                ],
                afterMixColumns: [
                    [0x74, 0xd8, 0x9c, 0x5b],
                    [0x27, 0xa6, 0xe8, 0xe0],
                    [0xfa, 0x95, 0x3d, 0x39],
                    [0xe4, 0x26, 0x31, 0x2b],
                ],
                roundKey: [
                    [0x25, 0x9b, 0x88, 0x5a],
                    [0x41, 0xf5, 0x13, 0x72],
                    [0xfe, 0x00, 0xbb, 0x1c],
                    [0x71, 0x25, 0xd5, 0x0a],
                ]
            ),
            CipherRound(
                index: 13,
                startOfRound: [
                    [0x51, 0x43, 0x14, 0x01],
                    [0x66, 0x53, 0xfb, 0x92],
                    [0x04, 0x95, 0x86, 0x25],
                    [0x95, 0x03, 0xe4, 0x21],
                ],
                afterAddRound: [
                    [0x62, 0x99, 0xc9, 0x23],
                    [0x7b, 0x9d, 0x45, 0xf5],
                    [0xce, 0x5a, 0xec, 0x6d],
                    [0xb9, 0xaa, 0xf4, 0xa5],
                ],
                afterSubBytes: [
                    [0xd1, 0x1a, 0xfa, 0x7c],
                    [0x33, 0xed, 0x0f, 0x4f],
                    [0xf2, 0x2a, 0x44, 0x3f],
                    [0x2a, 0x7b, 0x69, 0xfd],
                ],
                afterShiftRows: [
                    [0xd1, 0x1a, 0xfa, 0x7c],
                    [0xed, 0x0f, 0x4f, 0x33],
                    [0x44, 0x3f, 0xf2, 0x2a],
                    [0xfd, 0x2a, 0x7b, 0x69],
                ],
                afterMixColumns: [
                    [0x2c, 0x30, 0xb7, 0xee],
                    [0x21, 0x6f, 0x12, 0x0d],
                    [0xa8, 0x15, 0xc7, 0xa0],
                    [0x20, 0x4a, 0x5e, 0x4f],
                ],
                roundKey: [
                    [0x4e, 0xa9, 0x7e, 0xcd],
                    [0x5a, 0xf2, 0x57, 0xf8],
                    [0x66, 0x4f, 0x2b, 0xcd],
                    [0x99, 0xe0, 0xaa, 0xea],
                ]
            ),
            CipherRound(
                index: 14,
                startOfRound: [
                    [0x62, 0x99, 0xc9, 0x23],
                    [0x7b, 0x9d, 0x45, 0xf5],
                    [0xce, 0x5a, 0xec, 0x6d],
                    [0xb9, 0xaa, 0xf4, 0xa5],
                ],
                afterAddRound: [
                    [0x8e, 0x51, 0xea, 0x4b],
                    [0xa2, 0x67, 0xfc, 0x49],
                    [0xb7, 0x45, 0x49, 0x60],
                    [0xca, 0xbf, 0x90, 0x89],
                ],
                afterSubBytes: [
                    [0xaa, 0xee, 0xdd, 0x26],
                    [0x21, 0x5e, 0x6e, 0xe6],
                    [0x8b, 0xbe, 0xce, 0x3c],
                    [0x56, 0xac, 0xbf, 0x06],
                ],
                afterShiftRows: [
                    [0xaa, 0xee, 0xdd, 0x26],
                    [0x5e, 0x6e, 0xe6, 0x21],
                    [0xce, 0x3c, 0x8b, 0xbe],
                    [0x06, 0x56, 0xac, 0xbf],
                ],
                afterMixColumns: [[]],
                roundKey: [
                    [0x24, 0xbf, 0x37, 0x6d],
                    [0xfc, 0x09, 0x1a, 0x68],
                    [0x79, 0x79, 0xc2, 0xde],
                    [0xcc, 0xe9, 0x3c, 0x36],
                ]
            ),
            CipherRound(
                index: 15,
                startOfRound: [
                    [0x8e, 0x51, 0xea, 0x4b],
                    [0xa2, 0x67, 0xfc, 0x49],
                    [0xb7, 0x45, 0x49, 0x60],
                    [0xca, 0xbf, 0x90, 0x89],
                ]
                
            ),
        ]
        
        cipher.set(input: input, key: key)
        cipher.encryptState()
        
        XCTAssertEqual(cipher.getResult(), expectedOutput)
        
        for (index, actualRound) in cipher.getCipherHistory.enumerated() {
            let expectedRound = expectedCipherHistory[index]
            
            XCTAssertEqual(actualRound.index,
                           expectedRound.index,
                           "Round \(index): Index does not match.")
            XCTAssertEqual(actualRound.afterAddRound,
                           expectedRound.afterAddRound,
                           "After AddRoundKey \(index): After AddRoundKey value does not match.")
            XCTAssertEqual(actualRound.afterShiftRows,
                           expectedRound.afterShiftRows,
                           "After ShiftRows \(index): After ShiftRows does not match.")
            XCTAssertEqual(actualRound.afterSubBytes,
                           expectedRound.afterSubBytes,
                           "After SubBytes \(index): After SubBytes does not match.")
            XCTAssertEqual(actualRound.afterMixColumns,
                           expectedRound.afterMixColumns,
                           "After MixColumns \(index): After MixColumns does not match.")
            XCTAssertEqual(actualRound.roundKey,
                           expectedRound.roundKey,
                           "Round Key \(index): Round Key does not match.")
            
        }
        
    }
    
    func testDecryption128() {
        let input: [Byte] = [0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30, 0xd8, 0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a]
        let key: [Byte] = [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f]
        
        let expectedOutput: [[Byte]] = [
            [0x00, 0x44, 0x88, 0xcc],
            [0x11, 0x55, 0x99, 0xdd],
            [0x22, 0x66, 0xaa, 0xee],
            [0x33, 0x77, 0xbb, 0xff],
        ]
        let expectedCipherHistory: [CipherRound] = [
            CipherRound(
                index: 0,
                startOfRound: [
                    [0x69, 0x6a, 0xd8, 0x70],
                    [0xc4, 0x7b, 0xcd, 0xb4],
                    [0xe0, 0x04, 0xb7, 0xc5],
                    [0xd8, 0x30, 0x80, 0x5a],
                ],
                afterAddRound: [
                    [0x7a, 0x89, 0x2b, 0x3d],
                    [0xd5, 0xef, 0xca, 0x9f],
                    [0xfd, 0x4e, 0x10, 0xf5],
                    [0xa7, 0x27, 0x0b, 0x9f],
                ],
                afterSubBytes: [
                    [0xbd, 0xf2, 0x0b, 0x8b],
                    [0x6e, 0xb5, 0x61, 0x10],
                    [0x7c, 0x77, 0x21, 0xb6],
                    [0x3d, 0x9e, 0x6e, 0x89],
                ],
                afterShiftRows: [
                    [0x7a, 0x89, 0x2b, 0x3d],
                    [0x9f, 0xd5, 0xef, 0xca],
                    [0x10, 0xf5, 0xfd, 0x4e],
                    [0x27, 0x0b, 0x9f, 0xa7],
                ],
                roundKey: [
                    [0x13, 0xe3, 0xf3, 0x4d],
                    [0x11, 0x94, 0x07, 0x2b],
                    [0x1d, 0x4a, 0xa7, 0x30],
                    [0x7f, 0x17, 0x8b, 0xc5],
                ]),
            CipherRound(
                index: 1,
                startOfRound: [
                    [0xbd, 0xf2, 0x0b, 0x8b],
                    [0x6e, 0xb5, 0x61, 0x10],
                    [0x7c, 0x77, 0x21, 0xb6],
                    [0x3d, 0x9e, 0x6e, 0x89]
                ],
                afterAddRound: [
                    [0xe9, 0x02, 0x1b, 0x35],
                    [0xf7, 0x30, 0xf2, 0x3c],
                    [0x4e, 0x20, 0xcc, 0x21],
                    [0xec, 0xf6, 0xf2, 0xc7],
                    
                ],
                afterSubBytes: [
                    [0xfd, 0x05, 0x35, 0xf1],
                    [0xe3, 0xe5, 0x47, 0xfe],
                    [0xba, 0xd0, 0x96, 0x37],
                    [0xd2, 0xd7, 0x4e, 0xf1],
                ],
                afterShiftRows: [
                    [0x54, 0x6b, 0x96, 0xa1],
                    [0x11, 0xd9, 0xa0, 0xbb],
                    [0xf4, 0x70, 0x90, 0x9a],
                    [0xb5, 0x0e, 0x2f, 0xa1]
                ],
                afterMixColumns: [
                    [0x54, 0x6b, 0x96, 0xa1],
                    [0xd9, 0xa0, 0xbb, 0x11],
                    [0x90, 0x9a, 0xf4, 0x70],
                    [0xa1, 0xb5, 0x0e, 0x2f],
                    
                ],
                roundKey: [
                    [0x54, 0xf0, 0x10, 0xbe],
                    [0x99, 0x85, 0x93, 0x2c],
                    [0x32, 0x57, 0xed, 0x97],
                    [0xd1, 0x68, 0x9c, 0x4e]
                ]
            ),
            CipherRound(
                index: 2,
                startOfRound: [
                    [0xfd, 0x05, 0x35, 0xf1],
                    [0xe3, 0xe5, 0x47, 0xfe],
                    [0xba, 0xd0, 0x96, 0x37],
                    [0xd2, 0xd7, 0x4e, 0xf1],
                ],
                afterAddRound: [
                    [0xba, 0xa1, 0xd5, 0x5f],
                    [0xa0, 0xf9, 0x51, 0x41],
                    [0x3d, 0xb5, 0x2c, 0x4d],
                    [0xe7, 0x6e, 0xba, 0x23]
                ],
                afterSubBytes: [
                    [0xd1, 0x79, 0xb4, 0xd6],
                    [0x87, 0xc4, 0x55, 0x6f],
                    [0x6c, 0x30, 0x94, 0xf4],
                    [0x0f, 0x0a, 0xad, 0x1f]
                ],
                afterShiftRows: [
                    [0x3e, 0xb6, 0x8d, 0xf6],
                    [0x17, 0x1c, 0xfc, 0xa8],
                    [0x50, 0x04, 0x22, 0xbf],
                    [0x76, 0x67, 0x95, 0xc0]
                ],
                afterMixColumns: [
                    [0x3e, 0xb6, 0x8d, 0xf6],
                    [0x1c, 0xfc, 0xa8, 0x17],
                    [0x22, 0xbf, 0x50, 0x04],
                    [0xc0, 0x76, 0x67, 0x95]
                ],
                roundKey: [
                    [0x47, 0xa4, 0xe0, 0xae],
                    [0x43, 0x1c, 0x16, 0xbf],
                    [0x87, 0x65, 0xba, 0x7a],
                    [0x35, 0xb9, 0xf4, 0xd2]
                ]
            ),
            CipherRound(
                index: 3,
                startOfRound: [
                    [0xd1, 0x79, 0xb4, 0xd6],
                    [0x87, 0xc4, 0x55, 0x6f],
                    [0x6c, 0x30, 0x94, 0xf4],
                    [0x0f, 0x0a, 0xad, 0x1f]
                ],
                afterAddRound: [
                    [0xc5, 0x9a, 0xf0, 0x98],
                    [0x7e, 0x9b, 0x5f, 0xc6],
                    [0x1c, 0xd2, 0x4b, 0x34],
                    [0x15, 0x86, 0xe0, 0x39]
                ],
                afterSubBytes: [
                    [0xc6, 0xf7, 0xcc, 0x84],
                    [0x2f, 0x5e, 0x79, 0xf9],
                    [0xe1, 0xed, 0x39, 0xcf],
                    [0x09, 0xc3, 0x5d, 0x5d]
                ],
                afterShiftRows: [
                    [0xb4, 0x68, 0x4b, 0x5f],
                    [0x15, 0x58, 0xb6, 0x99],
                    [0xf8, 0x55, 0x12, 0x8a],
                    [0x01, 0x2e, 0x4c, 0x4c]
                ],
                afterMixColumns: [
                    [0xb4, 0x68, 0x4b, 0x5f],
                    [0x58, 0xb6, 0x99, 0x15],
                    [0x12, 0x8a, 0xf8, 0x55],
                    [0x4c, 0x01, 0x2e, 0x4c]
                ],
                roundKey: [
                    [0x14, 0xe3, 0x44, 0x4e],
                    [0xf9, 0x5f, 0x0a, 0xa9],
                    [0x70, 0xe2, 0xdf, 0xc0],
                    [0x1a, 0x8c, 0x4d, 0x26]
                ]
            ),
            CipherRound(
                index: 4,
                startOfRound: [
                    [0xc6, 0xf7, 0xcc, 0x84],
                    [0x2f, 0x5e, 0x79, 0xf9],
                    [0xe1, 0xed, 0x39, 0xcf],
                    [0x09, 0xc3, 0x5d, 0x5d]
                ],
                afterAddRound: [
                    [0x98, 0x00, 0x6b, 0x8e],
                    [0x16, 0xf8, 0x2c, 0x5a],
                    [0xee, 0x7f, 0x04, 0xd0],
                    [0x74, 0x55, 0x9c, 0x36],
                ],
                afterSubBytes: [
                    [0xc8, 0x9b, 0x25, 0xb0],
                    [0x16, 0x7a, 0x02, 0x26],
                    [0x77, 0xc9, 0x79, 0x19],
                    [0xbc, 0x3b, 0x92, 0x96]
                ],
                afterShiftRows: [
                    [0xe8, 0x14, 0x3f, 0xe7],
                    [0x47, 0xda, 0x77, 0xf7],
                    [0xf5, 0xdd, 0xb6, 0xd4],
                    [0x65, 0xe2, 0x4f, 0x90]
                ],
                afterMixColumns: [
                    [0xe8, 0x14, 0x3f, 0xe7],
                    [0xda, 0x77, 0xf7, 0x47],
                    [0xb6, 0xd4, 0xf5, 0xdd],
                    [0x90, 0x65, 0xe2, 0x4f]
                ],
                roundKey: [
                    [0x5e, 0xf7, 0xa7, 0x0a],
                    [0x39, 0xa6, 0x55, 0xa3],
                    [0x0f, 0x92, 0x3d, 0x1f],
                    [0x7d, 0x96, 0xc1, 0x6b]
                ]
            ),
            CipherRound(
                index: 5,
                startOfRound: [
                    [0xc8, 0x9b, 0x25, 0xb0],
                    [0x16, 0x7a, 0x02, 0x26],
                    [0x77, 0xc9, 0x79, 0x19],
                    [0xbc, 0x3b, 0x92, 0x96]
                ],
                afterAddRound: [
                    [0xf4, 0x32, 0x75, 0x1d],
                    [0xbc, 0xe5, 0xf1, 0xd0],
                    [0xd4, 0x54, 0xd6, 0x3b],
                    [0x54, 0xd0, 0xc5, 0x3c]
                ],
                
                afterSubBytes: [
                    [0x24, 0x69, 0x6e, 0x88],
                    [0x72, 0x66, 0xd2, 0x42],
                    [0x40, 0xb3, 0x75, 0x5b],
                    [0x23, 0xfa, 0x32, 0x6c]
                ],
                afterShiftRows: [
                    [0x36, 0xf9, 0x9f, 0xc4],
                    [0x40, 0x33, 0xb5, 0x2c],
                    [0x09, 0x6d, 0x9d, 0x39],
                    [0x26, 0x2d, 0x23, 0x50]
                ],
                afterMixColumns: [
                    [0x36, 0xf9, 0x9f, 0xc4],
                    [0x33, 0xb5, 0x2c, 0x40],
                    [0x9d, 0x39, 0x09, 0x6d],
                    [0x50, 0x26, 0x2d, 0x23]
                ],
                roundKey: [
                    [0x3c, 0xa9, 0x50, 0xad],
                    [0xaa, 0x9f, 0xf3, 0xf6],
                    [0xa3, 0x9d, 0xaf, 0x22],
                    [0xe8, 0xeb, 0x57, 0xaa]
                ]
            ),
            CipherRound(
                index: 6,
                startOfRound: [
                    [0x24, 0x69, 0x6e, 0x88],
                    [0x72, 0x66, 0xd2, 0x42],
                    [0x40, 0xb3, 0x75, 0x5b],
                    [0x23, 0xfa, 0x32, 0x6c]
                ],
                afterAddRound: [
                    [0x63, 0xfc, 0x97, 0x75],
                    [0x85, 0x53, 0xbe, 0x47],
                    [0xb7, 0x8d, 0x47, 0xd6],
                    [0x9f, 0xf9, 0x8e, 0x91]
                ],
                
                afterSubBytes: [
                    [0xfa, 0x25, 0x40, 0x57],
                    [0x63, 0xb3, 0x66, 0x24],
                    [0x6a, 0x39, 0x8a, 0x4d],
                    [0x28, 0xc9, 0x31, 0x17],
                ],
                afterShiftRows: [
                    [0x2d, 0x3f, 0x09, 0x5b],
                    [0xfb, 0x6d, 0x33, 0x36],
                    [0x02, 0x12, 0x7e, 0xe3],
                    [0x34, 0xdd, 0xc7, 0xf0]
                ],
                afterMixColumns: [
                    [0x2d, 0x3f, 0x09, 0x5b],
                    [0x6d, 0x33, 0x36, 0xfb],
                    [0x7e, 0xe3, 0x02, 0x12],
                    [0xf0, 0x34, 0xdd, 0xc7]
                ],
                roundKey: [
                    [0x47, 0x95, 0xf9, 0xfd],
                    [0xf7, 0x35, 0x6c, 0x05],
                    [0xf7, 0x3e, 0x32, 0x8d],
                    [0xbc, 0x03, 0xbc, 0xfd]
                ]
            ),
            CipherRound(
                index: 7,
                startOfRound: [
                    [0xfa, 0x25, 0x40, 0x57],
                    [0x63, 0xb3, 0x66, 0x24],
                    [0x6a, 0x39, 0x8a, 0x4d],
                    [0x28, 0xc9, 0x31, 0x17],
                ],
                afterAddRound: [
                    [0x4c, 0xf7, 0x2c, 0x53],
                    [0x9c, 0x71, 0x3f, 0x4d],
                    [0x1e, 0xf0, 0x86, 0xf2],
                    [0x66, 0x76, 0x8e, 0x56]
                ],
                afterSubBytes: [
                    [0x49, 0x55, 0xda, 0x1f],
                    [0x15, 0xe5, 0xca, 0x0a],
                    [0x59, 0xd7, 0x94, 0x63],
                    [0x8f, 0xa0, 0xfa, 0xf7]
                ],
                afterShiftRows: [
                    [0x3b, 0xfc, 0x57, 0xc0],
                    [0x59, 0xd9, 0x74, 0x67],
                    [0xcb, 0x0e, 0x22, 0xfb],
                    [0x73, 0xe0, 0x2d, 0x68]
                ],
                afterMixColumns: [
                    [0x3b, 0xfc, 0x57, 0xc0],
                    [0xd9, 0x74, 0x67, 0x59],
                    [0x22, 0xfb, 0xcb, 0x0e],
                    [0x68, 0x73, 0xe0, 0x2d]
                ],
                roundKey: [
                    [0xb6, 0xd2, 0x6c, 0x04],
                    [0xff, 0xc2, 0x59, 0x69],
                    [0x74, 0xc9, 0x0c, 0xbf],
                    [0x4e, 0xbf, 0xbf, 0x41]
                ]
            ),
            CipherRound(
                index: 8,
                startOfRound: [
                    [0x49, 0x55, 0xda, 0x1f],
                    [0x15, 0xe5, 0xca, 0x0a],
                    [0x59, 0xd7, 0x94, 0x63],
                    [0x8f, 0xa0, 0xfa, 0xf7]
                ],
                afterAddRound: [
                    [0xff, 0x31, 0x64, 0x77],
                    [0x87, 0xd8, 0x51, 0x3a],
                    [0x96, 0x6a, 0x51, 0xd0],
                    [0x84, 0x51, 0xfa, 0x09]
                ],
                afterSubBytes: [
                    [0x89, 0x85, 0x2d, 0xcb],
                    [0xd8, 0x5a, 0x18, 0x12],
                    [0x10, 0xce, 0x43, 0x8f],
                    [0xe8, 0x68, 0xd8, 0xe4]
                ],
                afterShiftRows: [
                    [0xa7, 0x97, 0xd8, 0x1f],
                    [0x61, 0xbe, 0xad, 0xc9],
                    [0xca, 0x8b, 0x1a, 0x73],
                    [0x9b, 0x45, 0x61, 0x69]
                ],
                afterMixColumns: [
                    [0xa7, 0x97, 0xd8, 0x1f],
                    [0xbe, 0xad, 0xc9, 0x61],
                    [0x1a, 0x73, 0xca, 0x8b],
                    [0x69, 0x9b, 0x45, 0x61]
                ],
                roundKey: [
                    [0xb6, 0x64, 0xbe, 0x68],
                    [0x92, 0x3d, 0x9b, 0x30],
                    [0xcf, 0xbd, 0xc5, 0xb3],
                    [0x0b, 0xf1, 0x00, 0xfe]
                ]
            ),
            CipherRound(
                index: 9,
                startOfRound: [
                    [0x89, 0x85, 0x2d, 0xcb],
                    [0xd8, 0x5a, 0x18, 0x12],
                    [0x10, 0xce, 0x43, 0x8f],
                    [0xe8, 0x68, 0xd8, 0xe4]
                ],
                afterAddRound: [
                    [0x5f, 0x57, 0xf7, 0x1d],
                    [0x72, 0xf5, 0xbe, 0xb9],
                    [0x64, 0xbc, 0x3b, 0xf9],
                    [0x15, 0x92, 0x29, 0x1a]
                ],
                
                afterSubBytes: [
                    [0x00, 0x40, 0x80, 0xc0],
                    [0x10, 0x50, 0x90, 0xd0],
                    [0x20, 0x60, 0xa0, 0xe0],
                    [0x30, 0x70, 0xb0, 0xf0]
                ],
                afterShiftRows: [
                    [0x63, 0x09, 0xcd, 0xba],
                    [0xca, 0x53, 0x60, 0x70],
                    [0xb7, 0xd0, 0xe0, 0xe1],
                    [0x04, 0x51, 0xe7, 0x8c]
                ],
                afterMixColumns: [
                    [0x63, 0x09, 0xcd, 0xba],
                    [0x53, 0x60, 0x70, 0xca],
                    [0xe0, 0xe1, 0xb7, 0xd0],
                    [0x8c, 0x04, 0x51, 0xe7]
                ],
                roundKey: [
                    [0xd6, 0xd2, 0xda, 0xd6],
                    [0xaa, 0xaf, 0xa6, 0xab],
                    [0x74, 0x72, 0x78, 0x76],
                    [0xfd, 0xfa, 0xf1, 0xfe]
                ]
            ),
            CipherRound(
                index: 10,
                startOfRound: [
                    [0x00, 0x40, 0x80, 0xc0],
                    [0x10, 0x50, 0x90, 0xd0],
                    [0x20, 0x60, 0xa0, 0xe0],
                    [0x30, 0x70, 0xb0, 0xf0]
                ],
                afterAddRound: [
                    [0x00, 0x44, 0x88, 0xcc],
                    [0x11, 0x55, 0x99, 0xdd],
                    [0x22, 0x66, 0xaa, 0xee],
                    [0x33, 0x77, 0xbb, 0xff]
                ],
                roundKey: [
                    [0x00, 0x04, 0x08, 0x0c],
                    [0x01, 0x05, 0x09, 0x0d],
                    [0x02, 0x06, 0x0a, 0x0e],
                    [0x03, 0x07, 0x0b, 0x0f]
                ]
            ),
            CipherRound(
                index: 11,
                startOfRound: [
                    [0x00, 0x44, 0x88, 0xcc],
                    [0x11, 0x55, 0x99, 0xdd],
                    [0x22, 0x66, 0xaa, 0xee],
                    [0x33, 0x77, 0xbb, 0xff]
                ]
            ),
        ]
        
        cipher.set(input: input, key: key)
        cipher.decryptState()
        
        XCTAssertEqual(cipher.getResult(), expectedOutput)
        
        for (index, actualRound) in cipher.getCipherHistory.enumerated() {
            let expectedRound = expectedCipherHistory[index]
            
            XCTAssertEqual(actualRound.index,
                           expectedRound.index,
                           "Round \(index): Index does not match.")
            XCTAssertEqual(actualRound.afterAddRound,
                           expectedRound.afterAddRound,
                           "After AddRoundKey \(index): After AddRoundKey value does not match.")
            XCTAssertEqual(actualRound.afterShiftRows,
                           expectedRound.afterShiftRows,
                           "After ShiftRows \(index): After ShiftRows does not match.")
            XCTAssertEqual(actualRound.afterSubBytes,
                           expectedRound.afterSubBytes,
                           "After SubBytes \(index): After SubBytes does not match.")
            XCTAssertEqual(actualRound.afterMixColumns,
                           expectedRound.afterMixColumns,
                           "After MixColumns \(index): After MixColumns does not match.")
            XCTAssertEqual(actualRound.roundKey,
                           expectedRound.roundKey,
                           "Round Key \(index): Round Key does not match.")
            
        }
    }
    
    func testDecryption192() {
        let input: [Byte] = [0xdd, 0xa9, 0x7c, 0xa4, 0x86, 0x4c, 0xdf, 0xe0, 0x6e, 0xaf, 0x70, 0xa0, 0xec, 0x0d, 0x71, 0x91]
        let key: [Byte] = [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17]
        
        let expectedOutput: [[Byte]] = [
            [0x00, 0x44, 0x88, 0xcc],
            [0x11, 0x55, 0x99, 0xdd],
            [0x22, 0x66, 0xaa, 0xee],
            [0x33, 0x77, 0xbb, 0xff],
        ]
        let expectedCipherHistory: [CipherRound] = [
            CipherRound(
                index: 0,
                startOfRound: [
                    [0xdd, 0x86, 0x6e, 0xec],
                    [0xa9, 0x4c, 0xaf, 0x0d],
                    [0x7c, 0xdf, 0x70, 0x71],
                    [0xa4, 0xe0, 0xa0, 0x91]
                ],
                afterAddRound: [
                    [0x79, 0x9c, 0xaa, 0x0f],
                    [0x3e, 0x34, 0xb7, 0xa9],
                    [0x76, 0x03, 0xb2, 0x6c],
                    [0x97, 0xe9, 0xd1, 0xcc],
                ],
                afterSubBytes: [
                    [0xaf, 0x1c, 0x62, 0xfb],
                    [0xb7, 0xd1, 0x28, 0x20],
                    [0x3e, 0xb8, 0x0f, 0xd5],
                    [0xeb, 0x51, 0x27, 0x85]
                ],
                afterShiftRows: [
                    [0x79, 0x9c, 0xaa, 0x0f],
                    [0xa9, 0x3e, 0x34, 0xb7],
                    [0xb2, 0x6c, 0x76, 0x03],
                    [0xe9, 0xd1, 0xcc, 0x97],
                    
                ],
                roundKey: [
                    [0xa4, 0x1a, 0xc4, 0xe3],
                    [0x97, 0x78, 0x18, 0xa4],
                    [0x0a, 0xdc, 0xc2, 0x1d],
                    [0x33, 0x09, 0x71, 0x5d]
                ]),
            CipherRound(
                index: 1,
                startOfRound: [
                    [0xaf, 0x1c, 0x62, 0xfb],
                    [0xb7, 0xd1, 0x28, 0x20],
                    [0x3e, 0xb8, 0x0f, 0xd5],
                    [0xeb, 0x51, 0x27, 0x85]
                ],
                afterAddRound: [
                    [0x71, 0x3b, 0xc0, 0x23],
                    [0xd7, 0x6d, 0x0b, 0x8e],
                    [0x20, 0x67, 0x8f, 0x0f],
                    [0x93, 0x7d, 0x28, 0xb7]
                ],
                afterSubBytes: [
                    [0x88, 0xf5, 0xcc, 0x06],
                    [0xec, 0xe7, 0x32, 0xd2],
                    [0x93, 0xe4, 0xf4, 0x94],
                    [0x0e, 0xb6, 0xc9, 0x14]
                ],
                afterShiftRows: [
                    [0xc4, 0xe6, 0x4b, 0x6f],
                    [0xce, 0x94, 0x23, 0xb5],
                    [0xdc, 0x69, 0xbf, 0x22],
                    [0xab, 0x4e, 0xdd, 0xfa]
                ],
                afterMixColumns: [
                    [0xc4, 0xe6, 0x4b, 0x6f],
                    [0x94, 0x23, 0xb5, 0xce],
                    [0xbf, 0x22, 0xdc, 0x69],
                    [0xfa, 0xab, 0x4e, 0xdd]
                    
                ],
                roundKey: [
                    [0xde, 0x27, 0xa2, 0xd8],
                    [0x60, 0xbc, 0x23, 0xae],
                    [0x1e, 0xdf, 0x80, 0xda],
                    [0x78, 0x2c, 0x0f, 0x32]
                ]
            ),
            CipherRound(
                index: 2,
                startOfRound: [
                    [0x88, 0xf5, 0xcc, 0x06],
                    [0xec, 0xe7, 0x32, 0xd2],
                    [0x93, 0xe4, 0xf4, 0x94],
                    [0x0e, 0xb6, 0xc9, 0x14]
                ],
                afterAddRound: [
                    [0x0d, 0x8f, 0x0c, 0xb8],
                    [0x73, 0x6a, 0xf2, 0x3d],
                    [0xcc, 0xbe, 0xdd, 0x42],
                    [0x2d, 0x8b, 0x9b, 0x2e]
                ],
                afterSubBytes: [
                    [0xa9, 0x96, 0xb4, 0xf0],
                    [0x06, 0x8a, 0xbd, 0xc4],
                    [0xb2, 0xf4, 0xb2, 0x43],
                    [0x54, 0xe9, 0xd2, 0x36]
                ],
                afterShiftRows: [
                    [0xd3, 0x90, 0x8d, 0x8c],
                    [0x6f, 0x7e, 0x7a, 0x1c],
                    [0x37, 0xbf, 0x37, 0x1a],
                    [0x20, 0x1e, 0xb5, 0x05]
                ],
                afterMixColumns: [
                    [0xd3, 0x90, 0x8d, 0x8c],
                    [0x7e, 0x7a, 0x1c, 0x6f],
                    [0x37, 0x1a, 0x37, 0xbf],
                    [0x05, 0x20, 0x1e, 0xb5]
                ],
                roundKey: [
                    [0x85, 0x7a, 0xc0, 0xbe],
                    [0x9f, 0x8d, 0xc0, 0xef],
                    [0x5f, 0x5a, 0x29, 0xd6],
                    [0x23, 0x3d, 0x52, 0x3a]
                ]
            ),
            CipherRound(
                index: 3,
                startOfRound: [
                    [0xa9, 0x96, 0xb4, 0xf0],
                    [0x06, 0x8a, 0xbd, 0xc4],
                    [0xb2, 0xf4, 0xb2, 0x43],
                    [0x54, 0xe9, 0xd2, 0x36]
                ],
                afterAddRound: [
                    [0x74, 0xe8, 0xd4, 0x09],
                    [0x78, 0xa5, 0x32, 0x18],
                    [0xbc, 0x0b, 0x7a, 0x82],
                    [0xdc, 0x81, 0x90, 0x62]
                ],
                afterSubBytes: [
                    [0x72, 0x0f, 0xe0, 0x40],
                    [0x55, 0xb8, 0x0d, 0xd0],
                    [0xda, 0x03, 0x6c, 0x52],
                    [0xd3, 0x10, 0x6b, 0x7c]
                ],
                afterShiftRows: [
                    [0x40, 0x76, 0xe1, 0x09],
                    [0xfc, 0x6c, 0xd7, 0x70],
                    [0x57, 0x7b, 0x50, 0x00],
                    [0x66, 0xca, 0x7f, 0x10]
                ],
                afterMixColumns: [
                    [0x40, 0x76, 0xe1, 0x09],
                    [0x6c, 0xd7, 0x70, 0xfc],
                    [0x50, 0x00, 0x57, 0x7b],
                    [0x10, 0x66, 0xca, 0x7f]
                ],
                roundKey: [
                    [0xdd, 0x7e, 0x60, 0xf9],
                    [0x7e, 0x2f, 0x8f, 0xdc],
                    [0x0e, 0xff, 0xc8, 0xc1],
                    [0x88, 0x68, 0x42, 0x54]
                ]
            ),
            
            CipherRound(
                index: 4,
                startOfRound: [
                    [0x72, 0x0f, 0xe0, 0x40],
                    [0x55, 0xb8, 0x0d, 0xd0],
                    [0xda, 0x03, 0x6c, 0x52],
                    [0xd3, 0x10, 0x6b, 0x7c]
                ],
                afterAddRound: [
                    [0x6c, 0x96, 0x9c, 0xbf],
                    [0xf5, 0xeb, 0x4e, 0xc2],
                    [0xed, 0x0a, 0xf2, 0x57],
                    [0xf9, 0x06, 0x1c, 0x62]
                ],
                
                afterSubBytes: [
                    [0x0c, 0x0c, 0x16, 0xd6],
                    [0x03, 0x01, 0x6b, 0xdb],
                    [0x70, 0xe6, 0x8a, 0x3a],
                    [0xd0, 0x22, 0xcc, 0x2c]
                ],
                afterShiftRows: [
                    [0xfe, 0xfe, 0x47, 0xf6],
                    [0x7b, 0x7c, 0x7f, 0xb9],
                    [0x51, 0x8e, 0x7e, 0x80],
                    [0x70, 0x93, 0x4b, 0x71]
                ],
                afterMixColumns: [
                    [0xfe, 0xfe, 0x47, 0xf6],
                    [0x7c, 0x7f, 0xb9, 0x7b],
                    [0x7e, 0x80, 0x51, 0x8e],
                    [0x71, 0x70, 0x93, 0x4b]
                ],
                roundKey: [
                    [0x1e, 0x99, 0x7c, 0xff],
                    [0xa0, 0x53, 0x43, 0x12],
                    [0x37, 0x09, 0x9e, 0x05],
                    [0x2a, 0x16, 0x77, 0x1e]
                ]
            ),
            
            CipherRound(
                index: 5,
                startOfRound: [
                    [0x0c, 0x0c, 0x16, 0xd6],
                    [0x03, 0x01, 0x6b, 0xdb],
                    [0x70, 0xe6, 0x8a, 0x3a],
                    [0xd0, 0x22, 0xcc, 0x2c]
                ],
                afterAddRound: [
                    [0xe9, 0x8f, 0x22, 0x75],
                    [0x13, 0x50, 0x7e, 0x8a],
                    [0xe7, 0x7d, 0xf6, 0xcb],
                    [0xb1, 0x4b, 0x52, 0xcc]
                ],
                afterSubBytes: [
                    [0x67, 0x4e, 0xdf, 0x3d],
                    [0x1e, 0x2a, 0xdc, 0x78],
                    [0xf1, 0x1e, 0xb1, 0x9b],
                    [0xfd, 0x03, 0xef, 0x30]
                ],
                afterShiftRows: [
                    [0x85, 0x2f, 0x9e, 0x27],
                    [0x72, 0xe5, 0x86, 0xbc],
                    [0xa1, 0x72, 0xc8, 0x14],
                    [0x54, 0x7b, 0xdf, 0x04]
                ],
                afterMixColumns: [
                    [0x85, 0x2f, 0x9e, 0x27],
                    [0xe5, 0x86, 0xbc, 0x72],
                    [0xc8, 0x14, 0xa1, 0x72],
                    [0x04, 0x54, 0x7b, 0xdf]
                ],
                roundKey: [
                    [0xe5, 0x83, 0x34, 0xa3],
                    [0x10, 0x51, 0x15, 0x51],
                    [0x97, 0x9b, 0x7c, 0xf1],
                    [0x61, 0x69, 0x9e, 0xe0]
                ]
            ),
            
            CipherRound(
                index: 6,
                startOfRound: [
                    [0x67, 0x4e, 0xdf, 0x3d],
                    [0x1e, 0x2a, 0xdc, 0x78],
                    [0xf1, 0x1e, 0xb1, 0x9b],
                    [0xfd, 0x03, 0xef, 0x30]
                ],
                afterAddRound: [
                    [0x92, 0xd9, 0x62, 0xba],
                    [0x1f, 0x6e, 0x2d, 0x8b],
                    [0x74, 0x93, 0x77, 0xa5],
                    [0x8f, 0x7d, 0x25, 0x0c]
                ],
                
                afterSubBytes: [
                    [0x80, 0x76, 0x8d, 0x96],
                    [0x12, 0xfd, 0x8c, 0x5d],
                    [0x1e, 0x1d, 0x31, 0x1f],
                    [0x07, 0x8a, 0xbc, 0xee]
                ],
                afterShiftRows: [
                    [0xcd, 0x38, 0x5d, 0x90],
                    [0xc9, 0x54, 0x64, 0x4c],
                    [0x72, 0xa4, 0xc7, 0xc0],
                    [0xc5, 0x7e, 0x65, 0x28]
                ],
                afterMixColumns: [
                    [0xcd, 0x38, 0x5d, 0x90],
                    [0x54, 0x64, 0x4c, 0xc9],
                    [0xc7, 0xc0, 0x72, 0xa4],
                    [0x28, 0xc5, 0x7e, 0x65]
                ],
                roundKey: [
                    [0xf5, 0x97, 0xbd, 0x87],
                    [0x01, 0x44, 0xf1, 0xf3],
                    [0x85, 0x8d, 0xc6, 0x3e],
                    [0x72, 0x7e, 0xca, 0x3c]
                ]
            ),
            CipherRound(
                index: 7,
                startOfRound: [
                    [0x80, 0x76, 0x8d, 0x96],
                    [0x12, 0xfd, 0x8c, 0x5d],
                    [0x1e, 0x1d, 0x31, 0x1f],
                    [0x07, 0x8a, 0xbc, 0xee]
                ],
                afterAddRound: [
                    [0xaa, 0x4c, 0xef, 0xf0],
                    [0xa7, 0xff, 0x6f, 0x1c],
                    [0x55, 0xe5, 0x98, 0x13],
                    [0xb3, 0x7c, 0xe1, 0xe6]
                ],
                afterSubBytes: [
                    [0x22, 0xa8, 0x64, 0x64],
                    [0xff, 0x14, 0x96, 0xae],
                    [0xc9, 0x74, 0xf1, 0x25],
                    [0x16, 0x41, 0x9c, 0x32]
                ],
                afterShiftRows: [
                    [0x93, 0xc2, 0x43, 0x43],
                    [0x16, 0xfa, 0x90, 0xe4],
                    [0xdd, 0x92, 0xa1, 0x3f],
                    [0x47, 0x83, 0xde, 0x23]
                ],
                afterMixColumns: [
                    [0x93, 0xc2, 0x43, 0x43],
                    [0xfa, 0x90, 0xe4, 0x16],
                    [0xa1, 0x3f, 0xdd, 0x92],
                    [0x23, 0x47, 0x83, 0xde]
                ],
                roundKey: [
                    [0x2a, 0x3a, 0x62, 0x66],
                    [0xb5, 0x02, 0xe3, 0x41],
                    [0x4b, 0xf8, 0xa9, 0x0c],
                    [0xb4, 0xf6, 0x5d, 0x08]
                ]
            ),
            CipherRound(
                index: 8,
                startOfRound: [
                    [0x22, 0xa8, 0x64, 0x64],
                    [0xff, 0x14, 0x96, 0xae],
                    [0xc9, 0x74, 0xf1, 0x25],
                    [0x16, 0x41, 0x9c, 0x32]
                ],
                afterAddRound: [
                    [0x7a, 0xac, 0x1a, 0x06],
                    [0x1e, 0xb6, 0x69, 0xeb],
                    [0x98, 0xd1, 0x44, 0x2d],
                    [0xbd, 0x14, 0xdd, 0x3e]
                ],
                
                afterSubBytes: [
                    [0xf7, 0xa3, 0x8c, 0xa6],
                    [0x5c, 0x27, 0xfe, 0xc3],
                    [0x77, 0xc8, 0xbf, 0x7f],
                    [0x78, 0xed, 0xc1, 0x53]
                ],
                afterShiftRows: [
                    [0x68, 0x0a, 0x64, 0x24],
                    [0x4a, 0xcc, 0xbb, 0x2e],
                    [0xf5, 0xe8, 0x08, 0xd2],
                    [0xbc, 0x55, 0x78, 0xed]
                ],
                afterMixColumns: [
                    [0x68, 0x0a, 0x64, 0x24],
                    [0xcc, 0xbb, 0x2e, 0x4a],
                    [0x08, 0xd2, 0xf5, 0xe8],
                    [0xed, 0xbc, 0x55, 0x78]
                ],
                roundKey: [
                    [0x58, 0x04, 0x7e, 0x62],
                    [0xe1, 0xa2, 0xff, 0x45],
                    [0x51, 0xa5, 0xb5, 0x08],
                    [0xab, 0x55, 0x41, 0x0c]
                ]
            ),
            CipherRound(
                index: 9,
                startOfRound: [
                    [0xf7, 0xa3, 0x8c, 0xa6],
                    [0x5c, 0x27, 0xfe, 0xc3],
                    [0x77, 0xc8, 0xbf, 0x7f],
                    [0x78, 0xed, 0xc1, 0x53]
                ],
                afterAddRound: [
                    [0xb7, 0xbf, 0xc4, 0xb6],
                    [0xa5, 0x9d, 0x0e, 0x74],
                    [0x3e, 0x75, 0xfc, 0xcc],
                    [0xcb, 0xa0, 0x79, 0x11]
                ],
                
                afterSubBytes: [
                    [0xcb, 0x17, 0x62, 0x8b],
                    [0x02, 0xd2, 0xaa, 0xb2],
                    [0x81, 0xaf, 0x64, 0x5f],
                    [0x8c, 0x9c, 0x42, 0xd7]
                ],
                afterShiftRows: [
                    [0x1f, 0xf0, 0xaa, 0x3d],
                    [0x77, 0xb5, 0xac, 0x37],
                    [0x0c, 0x79, 0x43, 0xcf],
                    [0x64, 0xde, 0x2c, 0x0e]
                ],
                afterMixColumns: [
                    [0x1f, 0xf0, 0xaa, 0x3d],
                    [0xb5, 0xac, 0x37, 0x77],
                    [0x43, 0xcf, 0x0c, 0x79],
                    [0x0e, 0x64, 0xde, 0x2c]
                ],
                roundKey: [
                    [0x40, 0x1c, 0x48, 0x10],
                    [0xf9, 0xba, 0xf0, 0xb7],
                    [0x49, 0xbd, 0x43, 0xb3],
                    [0xb3, 0x4d, 0xb8, 0x42]
                ]
            ),
            
            CipherRound(
                index: 10,
                startOfRound: [
                    [0xcb, 0x17, 0x62, 0x8b],
                    [0x02, 0xd2, 0xaa, 0xb2],
                    [0x81, 0xaf, 0x64, 0x5f],
                    [0x8c, 0x9c, 0x42, 0xd7]
                ],
                afterAddRound: [
                    [0x9f, 0x4f, 0x2a, 0xd7],
                    [0x48, 0x95, 0xfc, 0xf1],
                    [0x7f, 0x5f, 0x86, 0xab],
                    [0x79, 0x66, 0xab, 0x29]
                ],
                afterSubBytes: [
                    [0x4f, 0x43, 0xaf, 0x41],
                    [0x63, 0xe0, 0xf8, 0xfa],
                    [0x76, 0xaa, 0xc9, 0x0d],
                    [0x06, 0x85, 0xd0, 0xe4]
                ],
                afterShiftRows: [
                    [0x84, 0x1a, 0x79, 0x83],
                    [0xfb, 0xe1, 0x41, 0x2d],
                    [0x38, 0xac, 0xdd, 0xd7],
                    [0x6f, 0x97, 0x70, 0x69]
                ],
                afterMixColumns: [
                    [0x84, 0x1a, 0x79, 0x83],
                    [0xe1, 0x41, 0x2d, 0xfb],
                    [0xdd, 0xd7, 0x38, 0xac],
                    [0x69, 0x6f, 0x97, 0x70]
                ],
                roundKey: [
                    [0x54, 0x58, 0x48, 0x5c],
                    [0x4a, 0x47, 0x56, 0x43],
                    [0xfe, 0xf0, 0xe2, 0xf4],
                    [0xf5, 0xfa, 0xe9, 0xfe]
                ]
            ),
            
            CipherRound(
                index: 11,
                startOfRound: [
                    [0x4f, 0x43, 0xaf, 0x41],
                    [0x63, 0xe0, 0xf8, 0xfa],
                    [0x76, 0xaa, 0xc9, 0x0d],
                    [0x06, 0x85, 0xd0, 0xe4]
                ],
                afterAddRound: [
                    [0x5f, 0x57, 0xf7, 0x1d],
                    [0x72, 0xf5, 0xbe, 0xb9],
                    [0x64, 0xbc, 0x3b, 0xf9],
                    [0x15, 0x92, 0x29, 0x1a]
                ],
                afterSubBytes: [
                    [0x00, 0x40, 0x80, 0xc0],
                    [0x10, 0x50, 0x90, 0xd0],
                    [0x20, 0x60, 0xa0, 0xe0],
                    [0x30, 0x70, 0xb0, 0xf0]
                ],
                afterShiftRows: [
                    [0x63, 0x09, 0xcd, 0xba],
                    [0xca, 0x53, 0x60, 0x70],
                    [0xb7, 0xd0, 0xe0, 0xe1],
                    [0x04, 0x51, 0xe7, 0x8c]
                ],
                afterMixColumns: [
                    [0x63, 0x09, 0xcd, 0xba],
                    [0x53, 0x60, 0x70, 0xca],
                    [0xe0, 0xe1, 0xb7, 0xd0],
                    [0x8c, 0x04, 0x51, 0xe7]
                ],
                roundKey: [
                    [0x10, 0x14, 0x58, 0x5c],
                    [0x11, 0x15, 0x46, 0x43],
                    [0x12, 0x16, 0xf2, 0xf4],
                    [0x13, 0x17, 0xf9, 0xfe]
                ]
            ),
            
            CipherRound(
                index: 12,
                startOfRound: [
                    [0x00, 0x40, 0x80, 0xc0],
                    [0x10, 0x50, 0x90, 0xd0],
                    [0x20, 0x60, 0xa0, 0xe0],
                    [0x30, 0x70, 0xb0, 0xf0],
                ],
                afterAddRound: [
                    [0x00, 0x44, 0x88, 0xcc],
                    [0x11, 0x55, 0x99, 0xdd],
                    [0x22, 0x66, 0xaa, 0xee],
                    [0x33, 0x77, 0xbb, 0xff],
                ],
                roundKey: [
                    [0x00, 0x04, 0x08, 0x0c],
                    [0x01, 0x05, 0x09, 0x0d],
                    [0x02, 0x06, 0x0a, 0x0e],
                    [0x03, 0x07, 0x0b, 0x0f],
                ]
            ),
            CipherRound(
                index: 13,
                startOfRound: [
                    [0x00, 0x44, 0x88, 0xcc],
                    [0x11, 0x55, 0x99, 0xdd],
                    [0x22, 0x66, 0xaa, 0xee],
                    [0x33, 0x77, 0xbb, 0xff],
                ]
            )
        ]
        
        cipher.set(input: input, key: key)
        cipher.decryptState()
        
        XCTAssertEqual(cipher.getResult(), expectedOutput)
        
        for (index, actualRound) in cipher.getCipherHistory.enumerated() {
            let expectedRound = expectedCipherHistory[index]
            
            XCTAssertEqual(actualRound.index,
                           expectedRound.index,
                           "Round \(index): Index does not match.")
            XCTAssertEqual(actualRound.afterAddRound,
                           expectedRound.afterAddRound,
                           "After AddRoundKey \(index): After AddRoundKey value does not match.")
            XCTAssertEqual(actualRound.afterShiftRows,
                           expectedRound.afterShiftRows,
                           "After ShiftRows \(index): After ShiftRows does not match.")
            XCTAssertEqual(actualRound.afterSubBytes,
                           expectedRound.afterSubBytes,
                           "After SubBytes \(index): After SubBytes does not match.")
            XCTAssertEqual(actualRound.afterMixColumns,
                           expectedRound.afterMixColumns,
                           "After MixColumns \(index): After MixColumns does not match.")
            XCTAssertEqual(actualRound.roundKey,
                           expectedRound.roundKey,
                           "Round Key \(index): Round Key does not match.")
            
        }
    }
    
    func testDecryption256() {
        let input: [Byte] = [0x8e, 0xa2, 0xb7, 0xca, 0x51, 0x67, 0x45, 0xbf, 0xea, 0xfc, 0x49, 0x90, 0x4b, 0x49, 0x60, 0x89]
        let key: [Byte] = [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f]
        
        let expectedOutput: [[Byte]] = [
            [0x00, 0x44, 0x88, 0xcc],
            [0x11, 0x55, 0x99, 0xdd],
            [0x22, 0x66, 0xaa, 0xee],
            [0x33, 0x77, 0xbb, 0xff],
        ]
        let expectedCipherHistory: [CipherRound] = [
            CipherRound(
                index: 0,
                startOfRound: [
                    [0x8e, 0x51, 0xea, 0x4b],
                    [0xa2, 0x67, 0xfc, 0x49],
                    [0xb7, 0x45, 0x49, 0x60],
                    [0xca, 0xbf, 0x90, 0x89]
                ],
                afterAddRound: [
                    [0xaa, 0xee, 0xdd, 0x26],
                    [0x5e, 0x6e, 0xe6, 0x21],
                    [0xce, 0x3c, 0x8b, 0xbe],
                    [0x06, 0x56, 0xac, 0xbf]
                ],
                afterSubBytes: [
                    [0x62, 0x99, 0xc9, 0x23],
                    [0x7b, 0x9d, 0x45, 0xf5],
                    [0xce, 0x5a, 0xec, 0x6d],
                    [0xb9, 0xaa, 0xf4, 0xa5]
                ],
                afterShiftRows: [
                    [0xaa, 0xee, 0xdd, 0x26],
                    [0x21, 0x5e, 0x6e, 0xe6],
                    [0x8b, 0xbe, 0xce, 0x3c],
                    [0x56, 0xac, 0xbf, 0x06]
                    
                ],
                roundKey: [
                    [0x24, 0xbf, 0x37, 0x6d],
                    [0xfc, 0x09, 0x1a, 0x68],
                    [0x79, 0x79, 0xc2, 0xde],
                    [0xcc, 0xe9, 0x3c, 0x36]
                ]),
            CipherRound(
                index: 1,
                startOfRound: [
                    [0x62, 0x99, 0xc9, 0x23],
                    [0x7b, 0x9d, 0x45, 0xf5],
                    [0xce, 0x5a, 0xec, 0x6d],
                    [0xb9, 0xaa, 0xf4, 0xa5]
                ],
                afterAddRound: [
                    [0x2c, 0x30, 0xb7, 0xee],
                    [0x21, 0x6f, 0x12, 0x0d],
                    [0xa8, 0x15, 0xc7, 0xa0],
                    [0x20, 0x4a, 0x5e, 0x4f]
                ],
                afterSubBytes: [
                    [0x51, 0x43, 0x14, 0x01],
                    [0x66, 0x53, 0xfb, 0x92],
                    [0x04, 0x95, 0x86, 0x25],
                    [0x95, 0x03, 0xe4, 0x21]
                ],
                afterShiftRows: [
                    [0xd1, 0x1a, 0xfa, 0x7c],
                    [0x33, 0xed, 0x0f, 0x4f],
                    [0xf2, 0x2a, 0x44, 0x3f],
                    [0x2a, 0x7b, 0x69, 0xfd]
                ],
                afterMixColumns: [
                    [0xd1, 0x1a, 0xfa, 0x7c],
                    [0xed, 0x0f, 0x4f, 0x33],
                    [0x44, 0x3f, 0xf2, 0x2a],
                    [0xfd, 0x2a, 0x7b, 0x69]
                    
                ],
                roundKey: [
                    [0x4e, 0xa9, 0x7e, 0xcd],
                    [0x5a, 0xf2, 0x57, 0xf8],
                    [0x66, 0x4f, 0x2b, 0xcd],
                    [0x99, 0xe0, 0xaa, 0xea]
                ]
            ),
            CipherRound(
                index: 2,
                startOfRound: [
                    [0x51, 0x43, 0x14, 0x01],
                    [0x66, 0x53, 0xfb, 0x92],
                    [0x04, 0x95, 0x86, 0x25],
                    [0x95, 0x03, 0xe4, 0x21]
                ],
                afterAddRound: [
                    [0x74, 0xd8, 0x9c, 0x5b],
                    [0x27, 0xa6, 0xe8, 0xe0],
                    [0xfa, 0x95, 0x3d, 0x39],
                    [0xe4, 0x26, 0x31, 0x2b]
                ],
                afterSubBytes: [
                    [0x5f, 0xba, 0x50, 0x66],
                    [0x9c, 0xc6, 0x40, 0x67],
                    [0x6a, 0x34, 0x9f, 0x76],
                    [0xbf, 0xaa, 0xa7, 0x53]
                ],
                afterShiftRows: [
                    [0xcf, 0xf4, 0x53, 0x33],
                    [0xde, 0xb4, 0x09, 0x85],
                    [0x02, 0x18, 0xdb, 0x38],
                    [0x08, 0xac, 0x5c, 0xed]
                ],
                afterMixColumns: [
                    [0xcf, 0xf4, 0x53, 0x33],
                    [0xb4, 0x09, 0x85, 0xde],
                    [0xdb, 0x38, 0x02, 0x18],
                    [0xed, 0x08, 0xac, 0x5c]
                ],
                roundKey: [
                    [0x25, 0x9b, 0x88, 0x5a],
                    [0x41, 0xf5, 0x13, 0x72],
                    [0xfe, 0x00, 0xbb, 0x1c],
                    [0x71, 0x25, 0xd5, 0x0a]
                ]
            ),
            CipherRound(
                index: 3,
                startOfRound: [
                    [0x5f, 0xba, 0x50, 0x66],
                    [0x9c, 0xc6, 0x40, 0x67],
                    [0x6a, 0x34, 0x9f, 0x76],
                    [0xbf, 0xaa, 0xa7, 0x53]
                ],
                afterAddRound: [
                    [0xaf, 0x5d, 0x87, 0xd5],
                    [0x86, 0x6e, 0xe5, 0xc8],
                    [0x90, 0x1d, 0xfb, 0x90],
                    [0x41, 0xd3, 0xed, 0x13]
                ],
                afterSubBytes: [
                    [0xc1, 0xca, 0x70, 0x3b],
                    [0x49, 0x3b, 0xe9, 0x52],
                    [0x07, 0x3a, 0xaa, 0xb5],
                    [0xf6, 0xa0, 0x31, 0xec]
                ],
                afterShiftRows: [
                    [0x78, 0x74, 0x51, 0xe2],
                    [0x3b, 0xe2, 0x1e, 0x00],
                    [0xc5, 0x80, 0xac, 0xd5],
                    [0x42, 0xe0, 0xc7, 0xce]
                ],
                afterMixColumns: [
                    [0x78, 0x74, 0x51, 0xe2],
                    [0xe2, 0x1e, 0x00, 0x3b],
                    [0xac, 0xd5, 0xc5, 0x80],
                    [0xce, 0x42, 0xe0, 0xc7]
                ],
                roundKey: [
                    [0xf0, 0xe7, 0xd7, 0xb3],
                    [0x1a, 0xa8, 0xa5, 0xaf],
                    [0xfa, 0x29, 0x64, 0xe6],
                    [0xfe, 0x79, 0x4a, 0x40]
                ]
            ),
            
            CipherRound(
                index: 4,
                startOfRound: [
                    [0xc1, 0xca, 0x70, 0x3b],
                    [0x49, 0x3b, 0xe9, 0x52],
                    [0x07, 0x3a, 0xaa, 0xb5],
                    [0xf6, 0xa0, 0x31, 0xec]
                ],
                afterAddRound: [
                    [0xbd, 0x74, 0x63, 0xe9],
                    [0x86, 0x8f, 0x0f, 0x33],
                    [0xf0, 0xc4, 0x11, 0x12],
                    [0xea, 0xf4, 0xc1, 0x33]
                ],
                
                afterSubBytes: [
                    [0x4a, 0xc5, 0x64, 0x2a],
                    [0x82, 0x7e, 0x3d, 0xf3],
                    [0x48, 0x7e, 0xe5, 0xe8],
                    [0x51, 0x47, 0x0c, 0xc9]
                ],
                afterShiftRows: [
                    [0xd6, 0xa6, 0x43, 0xe5],
                    [0x13, 0xf3, 0x27, 0x0d],
                    [0x52, 0xf3, 0xd9, 0x9b],
                    [0xd1, 0xa0, 0xfe, 0xdd],
                ],
                afterMixColumns: [
                    [0xd6, 0xa6, 0x43, 0xe5],
                    [0xf3, 0x27, 0x0d, 0x13],
                    [0xd9, 0x9b, 0x52, 0xf3],
                    [0xdd, 0xd1, 0xa0, 0xfe]
                ],
                roundKey: [
                    [0x7c, 0xbe, 0x13, 0xd2],
                    [0xcf, 0xb4, 0xe6, 0x61],
                    [0xf7, 0xfe, 0xbb, 0xa7],
                    [0x1c, 0x54, 0xf0, 0xdf]
                ]
            ),
            
            CipherRound(
                index: 5,
                startOfRound: [
                    [0x4a, 0xc5, 0x64, 0x2a],
                    [0x82, 0x7e, 0x3d, 0xf3],
                    [0x48, 0x7e, 0xe5, 0xe8],
                    [0x51, 0x47, 0x0c, 0xc9]
                ],
                afterAddRound: [
                    [0x0f, 0xd2, 0x54, 0x4e],
                    [0x77, 0xcc, 0x30, 0xf9],
                    [0xee, 0xad, 0xa8, 0x6a],
                    [0x31, 0xc0, 0x3f, 0xc3]
                ],
                afterSubBytes: [
                    [0x5a, 0x5f, 0x05, 0x68],
                    [0xa8, 0xd2, 0xe1, 0xf3],
                    [0x58, 0x8d, 0xa3, 0xb9],
                    [0x39, 0x7d, 0x88, 0xc5]
                ],
                afterShiftRows: [
                    [0xbe, 0xcf, 0x6b, 0x45],
                    [0xc2, 0xb5, 0xf8, 0x0d],
                    [0x6a, 0x5d, 0x0a, 0x56],
                    [0x12, 0xff, 0xc4, 0xa6]
                ],
                afterMixColumns: [
                    [0xbe, 0xcf, 0x6b, 0x45],
                    [0xb5, 0xf8, 0x0d, 0xc2],
                    [0x0a, 0x56, 0x6a, 0x5d],
                    [0xa6, 0x12, 0xff, 0xc4]
                ],
                roundKey: [
                    [0x45, 0x17, 0x30, 0x64],
                    [0xf5, 0xb2, 0x0d, 0x0a],
                    [0xa6, 0xd3, 0x4d, 0x82],
                    [0x60, 0x87, 0x33, 0x0a],
                ]
            ),
            
            CipherRound(
                index: 6,
                startOfRound: [
                    [0x5a, 0x5f, 0x05, 0x68],
                    [0xa8, 0xd2, 0xe1, 0xf3],
                    [0x58, 0x8d, 0xa3, 0xb9],
                    [0x39, 0x7d, 0x88, 0xc5]
                ],
                afterAddRound: [
                    [0x51, 0x9d, 0xa8, 0xa9],
                    [0x74, 0xa9, 0xb3, 0x74],
                    [0xc8, 0x84, 0xe6, 0xa5],
                    [0x66, 0x35, 0x2c, 0xea]
                ],
                
                afterSubBytes: [
                    [0xd6, 0x6c, 0x5a, 0xb9],
                    [0x53, 0xa0, 0xca, 0x6c],
                    [0xa4, 0xbc, 0xab, 0x5e],
                    [0x69, 0x0f, 0x5d, 0x7d],
                ],
                afterShiftRows: [
                    [0xf6, 0x50, 0xbe, 0x56],
                    [0xed, 0xe0, 0x74, 0x50],
                    [0x49, 0x65, 0x62, 0x58],
                    [0xf9, 0x76, 0x4c, 0xff],
                ],
                afterMixColumns: [
                    [0xf6, 0x50, 0xbe, 0x56],
                    [0xe0, 0x74, 0x50, 0xed],
                    [0x62, 0x58, 0x49, 0x65],
                    [0xff, 0xf9, 0x76, 0x4c],
                ],
                roundKey: [
                    [0x0b, 0xc2, 0xad, 0xc1],
                    [0xdc, 0x7b, 0x52, 0x87],
                    [0x90, 0x09, 0x45, 0x1c],
                    [0x5f, 0x48, 0xa4, 0x2f],
                ]
            ),
            CipherRound(
                index: 7,
                startOfRound: [
                    [0xd6, 0x6c, 0x5a, 0xb9],
                    [0x53, 0xa0, 0xca, 0x6c],
                    [0xa4, 0xbc, 0xab, 0x5e],
                    [0x69, 0x0f, 0x5d, 0x7d],
                ],
                afterAddRound: [
                    [0xeb, 0x3e, 0x7d, 0xed],
                    [0xb1, 0xe7, 0x75, 0x6b],
                    [0x9e, 0xc9, 0x35, 0x91],
                    [0x1c, 0xe8, 0xe9, 0x44]
                ],
                afterSubBytes: [
                    [0x7f, 0xcb, 0xc1, 0x83],
                    [0x07, 0x4e, 0x0c, 0x75],
                    [0x41, 0x24, 0x81, 0xd5],
                    [0x43, 0x3e, 0x5d, 0x4c]
                ],
                afterShiftRows: [
                    [0xd2, 0x1f, 0x78, 0xec],
                    [0xc5, 0x2f, 0xfe, 0x9d],
                    [0x83, 0x36, 0x0c, 0x03],
                    [0x1a, 0xb2, 0x4c, 0x29],
                ],
                afterMixColumns: [
                    [0xd2, 0x1f, 0x78, 0xec],
                    [0x2f, 0xfe, 0x9d, 0xc5],
                    [0x0c, 0x03, 0x83, 0x36],
                    [0x29, 0x1a, 0xb2, 0x4c],
                ],
                roundKey: [
                    [0x3d, 0x52, 0x27, 0x54],
                    [0xe2, 0x47, 0xbf, 0x07],
                    [0x3a, 0x75, 0x9e, 0xcf],
                    [0x75, 0xe7, 0xb4, 0x39],
                ]
            ),
            CipherRound(
                index: 8,
                startOfRound: [
                    [0x7f, 0xcb, 0xc1, 0x83],
                    [0x07, 0x4e, 0x0c, 0x75],
                    [0x41, 0x24, 0x81, 0xd5],
                    [0x43, 0x3e, 0x5d, 0x4c]
                ],
                afterAddRound: [
                    [0xb9, 0x02, 0xae, 0xef],
                    [0x51, 0xe9, 0x25, 0xa0],
                    [0xc3, 0xbd, 0xcd, 0x8c],
                    [0x3c, 0x29, 0xb1, 0xc7]
                ],
                
                afterSubBytes: [
                    [0xc3, 0x1b, 0xa2, 0xa8],
                    [0x57, 0x45, 0xc7, 0xdc],
                    [0xaa, 0xb7, 0xbd, 0x99],
                    [0xe1, 0xb0, 0x28, 0xfa],
                ],
                afterShiftRows: [
                    [0x2e, 0xaf, 0x3a, 0xc2],
                    [0x5b, 0x6e, 0xc6, 0x86],
                    [0xac, 0xa9, 0x7a, 0xee],
                    [0xf8, 0xe7, 0x34, 0x2d],
                ],
                afterMixColumns: [
                    [0x2e, 0xaf, 0x3a, 0xc2],
                    [0x6e, 0xc6, 0x86, 0x5b],
                    [0x7a, 0xee, 0xac, 0xa9],
                    [0x2d, 0xf8, 0xe7, 0x34],
                ],
                roundKey: [
                    [0xc6, 0xc9, 0x6f, 0x6c],
                    [0x56, 0xa7, 0x29, 0xd5],
                    [0x82, 0x99, 0x4c, 0x59],
                    [0x7f, 0x17, 0xec, 0x8b]
                ]
            ),
            CipherRound(
                index: 9,
                startOfRound: [
                    [0xc3, 0x1b, 0xa2, 0xa8],
                    [0x57, 0x45, 0xc7, 0xdc],
                    [0xaa, 0xb7, 0xbd, 0x99],
                    [0xe1, 0xb0, 0x28, 0xfa],
                ],
                afterAddRound: [
                    [0xae, 0x74, 0xd7, 0xdb],
                    [0xb6, 0xe0, 0x3f, 0x64],
                    [0x5b, 0xf8, 0x56, 0xc8],
                    [0xa9, 0x22, 0x7b, 0x77],
                ],
                
                afterSubBytes: [
                    [0x1c, 0xa4, 0xf9, 0x04],
                    [0x05, 0x17, 0x21, 0x70],
                    [0xf2, 0xe0, 0xc5, 0x15],
                    [0x71, 0x4f, 0xc1, 0x54],
                ],
                afterShiftRows: [
                    [0x9c, 0x49, 0x99, 0xf2],
                    [0x6b, 0xf0, 0xfd, 0x51],
                    [0x89, 0xe1, 0xa6, 0x59],
                    [0xa3, 0x84, 0x78, 0x20],
                ],
                afterMixColumns: [
                    [0x9c, 0x49, 0x99, 0xf2],
                    [0xf0, 0xfd, 0x51, 0x6b],
                    [0xa6, 0x59, 0x89, 0xe1],
                    [0x20, 0xa3, 0x84, 0x78],
                ],
                roundKey: [
                    [0x6d, 0x6f, 0x75, 0x73],
                    [0xe1, 0xa5, 0xf8, 0xb8],
                    [0xf1, 0x4f, 0xeb, 0x51],
                    [0x48, 0x92, 0x53, 0x8d],
                ]
            ),
            
            CipherRound(
                index: 10,
                startOfRound: [
                    [0x1c, 0xa4, 0xf9, 0x04],
                    [0x05, 0x17, 0x21, 0x70],
                    [0xf2, 0xe0, 0xc5, 0x15],
                    [0x71, 0x4f, 0xc1, 0x54],
                ],
                afterAddRound: [
                    [0xb2, 0xab, 0x5f, 0x07],
                    [0x82, 0xe6, 0xaf, 0x8c],
                    [0x2d, 0xfb, 0x10, 0x00],
                    [0x81, 0x27, 0x3a, 0x33],
                ],
                afterSubBytes: [
                    [0x97, 0xcb, 0xa9, 0x8e],
                    [0x5c, 0x9f, 0x3a, 0xe1],
                    [0x66, 0x3f, 0x28, 0x0f],
                    [0xc1, 0xa8, 0xdf, 0x63],
                ],
                afterShiftRows: [
                    [0x88, 0x1f, 0xd3, 0x19],
                    [0x4a, 0xdb, 0x80, 0xf8],
                    [0x33, 0x75, 0x34, 0x76],
                    [0x78, 0xc2, 0x9e, 0xfb],
                ],
                afterMixColumns: [
                    [0x88, 0x1f, 0xd3, 0x19],
                    [0xdb, 0x80, 0xf8, 0x4a],
                    [0x34, 0x76, 0x33, 0x75],
                    [0xfb, 0x78, 0xc2, 0x9e],
                ],
                roundKey: [
                    [0xae, 0x0f, 0xa6, 0x03],
                    [0x87, 0xf1, 0x8e, 0xfc],
                    [0xdf, 0x1b, 0xd5, 0x15],
                    [0xf0, 0x68, 0xfb, 0x67],
                ]
            ),
            
            CipherRound(
                index: 11,
                startOfRound: [
                    [0x97, 0xcb, 0xa9, 0x8e],
                    [0x5c, 0x9f, 0x3a, 0xe1],
                    [0x66, 0x3f, 0x28, 0x0f],
                    [0xc1, 0xa8, 0xdf, 0x63],
                ],
                afterAddRound: [
                    [0x81, 0xc9, 0xb3, 0x88],
                    [0x0d, 0xdb, 0x67, 0xa1],
                    [0xce, 0x81, 0x8c, 0xb5],
                    [0x0c, 0x72, 0x1e, 0xbd],
                ],
                afterSubBytes: [
                    [0x18, 0x8a, 0x78, 0xc4],
                    [0x59, 0x1c, 0xed, 0x2f],
                    [0xfb, 0x00, 0x8a, 0x61],
                    [0xc2, 0xa0, 0xad, 0x09],
                ],
                afterShiftRows: [
                    [0xad, 0x7e, 0xbc, 0x1c],
                    [0xcb, 0x9c, 0x55, 0x15],
                    [0x0f, 0x63, 0x7e, 0xef],
                    [0x25, 0xe0, 0x95, 0x01],
                ],
                afterMixColumns: [
                    [0xad, 0x7e, 0xbc, 0x1c],
                    [0x9c, 0x55, 0x15, 0xcb],
                    [0x7e, 0xef, 0x0f, 0x63],
                    [0x01, 0x25, 0xe0, 0x95],
                ],
                roundKey: [
                    [0x16, 0x02, 0x1a, 0x06],
                    [0x51, 0x44, 0x5d, 0x40],
                    [0xa8, 0xbe, 0xa4, 0xba],
                    [0xcd, 0xda, 0xc1, 0xde],
                ]
            ),
            
            CipherRound(
                index: 12,
                startOfRound: [
                    [0x18, 0x8a, 0x78, 0xc4],
                    [0x59, 0x1c, 0xed, 0x2f],
                    [0xfb, 0x00, 0x8a, 0x61],
                    [0xc2, 0xa0, 0xad, 0x09],
                ],
                afterAddRound: [
                    [0xbd, 0x2b, 0xd1, 0x61],
                    [0x2a, 0x6a, 0x92, 0x5d],
                    [0x39, 0xc4, 0x44, 0xa1],
                    [0x5d, 0x38, 0x3e, 0x95],
                ],
                afterSubBytes: [
                    [0x4f, 0x43, 0xef, 0x01],
                    [0x63, 0xe0, 0xa7, 0xa4],
                    [0x76, 0xaa, 0x21, 0xe7],
                    [0x06, 0x85, 0x32, 0x05],
                ],
                afterShiftRows: [
                    [0x84, 0x1a, 0xdf, 0x7c],
                    [0xfb, 0xe1, 0x5c, 0x49],
                    [0x38, 0xac, 0xfd, 0x94],
                    [0x6f, 0x97, 0x23, 0x6b],
                ],
                afterMixColumns: [
                    [0x84, 0x1a, 0xdf, 0x7c],
                    [0xe1, 0x5c, 0x49, 0xfb],
                    [0xfd, 0x94, 0x38, 0xac],
                    [0x6b, 0x6f, 0x97, 0x23],
                ],
                roundKey: [
                    [0xa5, 0xa1, 0xa9, 0xa5],
                    [0x73, 0x76, 0x7f, 0x72],
                    [0xc2, 0xc4, 0xce, 0xc0],
                    [0x9f, 0x98, 0x93, 0x9c],
                ]
            ),
            CipherRound(
                index: 13,
                startOfRound: [
                    [0x4f, 0x43, 0xef, 0x01],
                    [0x63, 0xe0, 0xa7, 0xa4],
                    [0x76, 0xaa, 0x21, 0xe7],
                    [0x06, 0x85, 0x32, 0x05],
                ],
                afterAddRound: [
                    [0x5f, 0x57, 0xf7, 0x1d],
                    [0x72, 0xf5, 0xbe, 0xb9],
                    [0x64, 0xbc, 0x3b, 0xf9],
                    [0x15, 0x92, 0x29, 0x1a],
                ],
                afterSubBytes: [
                    [0x00, 0x40, 0x80, 0xc0],
                    [0x10, 0x50, 0x90, 0xd0],
                    [0x20, 0x60, 0xa0, 0xe0],
                    [0x30, 0x70, 0xb0, 0xf0],
                ],
                afterShiftRows: [
                    [0x63, 0x09, 0xcd, 0xba],
                    [0xca, 0x53, 0x60, 0x70],
                    [0xb7, 0xd0, 0xe0, 0xe1],
                    [0x04, 0x51, 0xe7, 0x8c],
                ],
                afterMixColumns: [
                    [0x63, 0x09, 0xcd, 0xba],
                    [0x53, 0x60, 0x70, 0xca],
                    [0xe0, 0xe1, 0xb7, 0xd0],
                    [0x8c, 0x04, 0x51, 0xe7],
                ],
                roundKey: [
                    [0x10, 0x14, 0x18, 0x1c],
                    [0x11, 0x15, 0x19, 0x1d],
                    [0x12, 0x16, 0x1a, 0x1e],
                    [0x13, 0x17, 0x1b, 0x1f],
                ]
            ),
            CipherRound(
                index: 14,
                startOfRound: [
                    [0x00, 0x40, 0x80, 0xc0],
                    [0x10, 0x50, 0x90, 0xd0],
                    [0x20, 0x60, 0xa0, 0xe0],
                    [0x30, 0x70, 0xb0, 0xf0],
                ],
                afterAddRound: [
                    [0x00, 0x44, 0x88, 0xcc],
                    [0x11, 0x55, 0x99, 0xdd],
                    [0x22, 0x66, 0xaa, 0xee],
                    [0x33, 0x77, 0xbb, 0xff],
                ],
                roundKey: [
                    [0x00, 0x04, 0x08, 0x0c],
                    [0x01, 0x05, 0x09, 0x0d],
                    [0x02, 0x06, 0x0a, 0x0e],
                    [0x03, 0x07, 0x0b, 0x0f],
                ]
            ),
            CipherRound(
                index: 15,
                startOfRound: [
                    [0x00, 0x44, 0x88, 0xcc],
                    [0x11, 0x55, 0x99, 0xdd],
                    [0x22, 0x66, 0xaa, 0xee],
                    [0x33, 0x77, 0xbb, 0xff],
                ]
            )
        ]
        
        cipher.set(input: input, key: key)
        cipher.decryptState()
        
        XCTAssertEqual(cipher.getResult(), expectedOutput)
        
        for (index, actualRound) in cipher.getCipherHistory.enumerated() {
            let expectedRound = expectedCipherHistory[index]
            
            XCTAssertEqual(actualRound.index,
                           expectedRound.index,
                           "Round \(index): Index does not match.")
            XCTAssertEqual(actualRound.afterAddRound,
                           expectedRound.afterAddRound,
                           "After AddRoundKey \(index): After AddRoundKey value does not match.")
            XCTAssertEqual(actualRound.afterShiftRows,
                           expectedRound.afterShiftRows,
                           "After ShiftRows \(index): After ShiftRows does not match.")
            XCTAssertEqual(actualRound.afterSubBytes,
                           expectedRound.afterSubBytes,
                           "After SubBytes \(index): After SubBytes does not match.")
            XCTAssertEqual(actualRound.afterMixColumns,
                           expectedRound.afterMixColumns,
                           "After MixColumns \(index): After MixColumns does not match.")
            XCTAssertEqual(actualRound.roundKey,
                           expectedRound.roundKey,
                           "Round Key \(index): Round Key does not match.")
            
        }
    }
    
}
